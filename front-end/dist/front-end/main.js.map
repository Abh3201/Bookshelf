{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/admin_components/admin-login/admin-login.component.css","webpack:///./src/app/components/admin_components/admin-login/admin-login.component.html","webpack:///./src/app/components/admin_components/admin-login/admin-login.component.ts","webpack:///./src/app/components/admin_components/admin-nav/admin-nav.component.css","webpack:///./src/app/components/admin_components/admin-nav/admin-nav.component.html","webpack:///./src/app/components/admin_components/admin-nav/admin-nav.component.ts","webpack:///./src/app/components/admin_components/book-dash/book-dash.component.css","webpack:///./src/app/components/admin_components/book-dash/book-dash.component.html","webpack:///./src/app/components/admin_components/book-dash/book-dash.component.ts","webpack:///./src/app/components/admin_components/book-dash/book-dialog/book-dialog.component.css","webpack:///./src/app/components/admin_components/book-dash/book-dialog/book-dialog.component.html","webpack:///./src/app/components/admin_components/book-dash/book-dialog/book-dialog.component.ts","webpack:///./src/app/components/admin_components/book-dash/book-edit/book-edit.component.css","webpack:///./src/app/components/admin_components/book-dash/book-edit/book-edit.component.html","webpack:///./src/app/components/admin_components/book-dash/book-edit/book-edit.component.ts","webpack:///./src/app/components/admin_components/book-dash/book-table/book-del-warn/book-del-warn.component.css","webpack:///./src/app/components/admin_components/book-dash/book-table/book-del-warn/book-del-warn.component.html","webpack:///./src/app/components/admin_components/book-dash/book-table/book-del-warn/book-del-warn.component.ts","webpack:///./src/app/components/admin_components/book-dash/book-table/book-table.component.css","webpack:///./src/app/components/admin_components/book-dash/book-table/book-table.component.html","webpack:///./src/app/components/admin_components/book-dash/book-table/book-table.component.ts","webpack:///./src/app/components/admin_components/notifications/notifications.component.css","webpack:///./src/app/components/admin_components/notifications/notifications.component.html","webpack:///./src/app/components/admin_components/notifications/notifications.component.ts","webpack:///./src/app/components/admin_components/user-dash/user-dash.component.css","webpack:///./src/app/components/admin_components/user-dash/user-dash.component.html","webpack:///./src/app/components/admin_components/user-dash/user-dash.component.ts","webpack:///./src/app/components/admin_components/user-dash/user-table/user-table.component.css","webpack:///./src/app/components/admin_components/user-dash/user-table/user-table.component.html","webpack:///./src/app/components/admin_components/user-dash/user-table/user-table.component.ts","webpack:///./src/app/components/user_components/afpay/afpay.component.css","webpack:///./src/app/components/user_components/afpay/afpay.component.html","webpack:///./src/app/components/user_components/afpay/afpay.component.ts","webpack:///./src/app/components/user_components/bookmarks-dash/bookmarks-dash.component.css","webpack:///./src/app/components/user_components/bookmarks-dash/bookmarks-dash.component.html","webpack:///./src/app/components/user_components/bookmarks-dash/bookmarks-dash.component.ts","webpack:///./src/app/components/user_components/collection-dash/collection-dash.component.css","webpack:///./src/app/components/user_components/collection-dash/collection-dash.component.html","webpack:///./src/app/components/user_components/collection-dash/collection-dash.component.ts","webpack:///./src/app/components/user_components/collection-dash/un-borrow/un-borrow.component.css","webpack:///./src/app/components/user_components/collection-dash/un-borrow/un-borrow.component.html","webpack:///./src/app/components/user_components/collection-dash/un-borrow/un-borrow.component.ts","webpack:///./src/app/components/user_components/login/flash.css","webpack:///./src/app/components/user_components/login/login.component.css","webpack:///./src/app/components/user_components/login/login.component.html","webpack:///./src/app/components/user_components/login/login.component.ts","webpack:///./src/app/components/user_components/my-dashboard/conf-borr/conf-borr.component.css","webpack:///./src/app/components/user_components/my-dashboard/conf-borr/conf-borr.component.html","webpack:///./src/app/components/user_components/my-dashboard/conf-borr/conf-borr.component.ts","webpack:///./src/app/components/user_components/my-dashboard/my-dashboard.component.css","webpack:///./src/app/components/user_components/my-dashboard/my-dashboard.component.html","webpack:///./src/app/components/user_components/my-dashboard/my-dashboard.component.ts","webpack:///./src/app/components/user_components/my-nav/my-nav.component.css","webpack:///./src/app/components/user_components/my-nav/my-nav.component.html","webpack:///./src/app/components/user_components/my-nav/my-nav.component.ts","webpack:///./src/app/components/user_components/profile/profile.component.css","webpack:///./src/app/components/user_components/profile/profile.component.html","webpack:///./src/app/components/user_components/profile/profile.component.ts","webpack:///./src/app/components/user_components/register/register.component.css","webpack:///./src/app/components/user_components/register/register.component.html","webpack:///./src/app/components/user_components/register/register.component.ts","webpack:///./src/app/components/user_components/suggest-book/suggest-book.component.css","webpack:///./src/app/components/user_components/suggest-book/suggest-book.component.html","webpack:///./src/app/components/user_components/suggest-book/suggest-book.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/books.service.ts","webpack:///./src/app/services/notifications.service.ts","webpack:///./src/app/services/upload.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///os (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MyDashboardComponent } from './components/user_components/my-dashboard/my-dashboard.component';\r\nimport { RegisterComponent } from './components/user_components/register/register.component';\r\nimport { LoginComponent } from './components/user_components/login/login.component';\r\nimport { ProfileComponent } from './components/user_components/profile/profile.component';\r\n\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\nimport { AdminLoginComponent } from './components/admin_components/admin-login/admin-login.component';\r\n\r\nimport { BookDashComponent } from './components/admin_components/book-dash/book-dash.component';\r\nimport { UserDashComponent } from './components/admin_components/user-dash/user-dash.component';\r\nimport { CollectionDashComponent } from './components/user_components/collection-dash/collection-dash.component';\r\nimport { BookmarksDashComponent } from './components/user_components/bookmarks-dash/bookmarks-dash.component';\r\n\r\nimport { AdminGuard } from './guards/admin.guard';\r\n// import { DueDashComponent } from './components/user_components/due-dash/due-dash.component';\r\nimport { SuggestBookComponent } from './components/user_components/suggest-book/suggest-book.component';\r\nimport { NotificationsComponent } from './components/admin_components/notifications/notifications.component';\r\nimport { AfpayComponent } from './components/user_components/afpay/afpay.component';\r\n// MDB Angular Pro\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MyDashboardComponent, canActivate:[AuthGuard]},\r\n  {path: 'collection', component: CollectionDashComponent, canActivate: [AuthGuard]},    \r\n  {path: 'bookmarks', component: BookmarksDashComponent, canActivate: [AuthGuard]},    \r\n  // {path: 'dues', component: DueDashComponent, canActivate: [AuthGuard]},\r\n  {path: 'suggest-book', component: SuggestBookComponent, canActivate: [AuthGuard]},\r\n  {path: 'register', component: RegisterComponent},  \r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'profile', component: ProfileComponent},  \r\n  {path: 'admin-login', component: AdminLoginComponent},\r\n  {path: 'admin-books', component: BookDashComponent},  //, canActivate:[AdminGuard]\r\n  {path: 'admin-users', component: UserDashComponent}, //, canActivate:[AdminGuard]\r\n  {path: 'admin-notices', component: NotificationsComponent}, //, canActivate: [AdminGuard]\r\n  {path: 'afpay', component: AfpayComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<flash-messages></flash-messages>\\r\\n<ng-flash-message></ng-flash-message>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators ,FormsModule,NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';  \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { FlashMessagesModule } from 'angular2-flash-messages/module';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\r\n\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { HttpClientModule } from '@angular/common/http'; \r\n\r\nimport { MyNavComponent } from './components/user_components/my-nav/my-nav.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatToolbarModule,\r\n         MatButtonModule, \r\n         MatSidenavModule, \r\n         MatIconModule, \r\n         MatListModule, \r\n         MatGridListModule, \r\n         MatCardModule, \r\n         MatMenuModule, \r\n         MatFormFieldModule, \r\n         MatInputModule, \r\n         MatSelectModule,\r\n\r\n         MatProgressSpinnerModule,\r\n\r\n         MatOptionModule,\r\n         MatDatepickerModule,      \r\n         MatNativeDateModule,\r\n         MatRadioModule, \r\n         MatSlideToggleModule,\r\n\r\n         MatDialogModule,\r\n\r\n         ErrorStateMatcher,\r\n         ShowOnDirtyErrorStateMatcher, MatTableModule, MatPaginatorModule, MatSortModule\r\n        } from '@angular/material';\r\n\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\n\r\nimport 'hammerjs';\r\n\r\n\r\n\r\nimport { MyDashboardComponent } from './components/user_components/my-dashboard/my-dashboard.component';\r\nimport { RegisterComponent } from './components/user_components/register/register.component';\r\nimport { FormsModule, ReactiveFormsModule, } from '@angular/forms';\r\nimport { ValidateService } from './services/validate.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { LoginComponent } from './components/user_components/login/login.component';\r\nimport { ProfileComponent } from './components/user_components/profile/profile.component';\r\nimport { AdminLoginComponent } from './components/admin_components/admin-login/admin-login.component';\r\nimport { AdminNavComponent } from './components/admin_components/admin-nav/admin-nav.component';\r\nimport { BookDashComponent } from './components/admin_components/book-dash/book-dash.component';\r\nimport { UserDashComponent } from './components/admin_components/user-dash/user-dash.component';\r\n\r\nimport { BookTableComponent } from './components/admin_components/book-dash/book-table/book-table.component';\r\nimport { BookDialogComponent } from './components/admin_components/book-dash/book-dialog/book-dialog.component';\r\nimport { BookDelWarnComponent } from './components/admin_components/book-dash/book-table/book-del-warn/book-del-warn.component';\r\nimport { BookEditComponent } from './components/admin_components/book-dash/book-edit/book-edit.component';\r\nimport { environment } from '../environments/environment';\r\nimport { ConfBorrComponent } from './components/user_components/my-dashboard/conf-borr/conf-borr.component';\r\nimport { CollectionDashComponent } from './components/user_components/collection-dash/collection-dash.component';\r\nimport { BookmarksDashComponent } from './components/user_components/bookmarks-dash/bookmarks-dash.component';\r\n// import { DueDashComponent } from './components/user_components/due-dash/due-dash.component';\r\nimport { SuggestBookComponent } from './components/user_components/suggest-book/suggest-book.component';\r\nimport { UnBorrowComponent } from './components/user_components/collection-dash/un-borrow/un-borrow.component';\r\nimport { NotificationsComponent } from './components/admin_components/notifications/notifications.component';\r\nimport { UserTableComponent } from './components/admin_components/user-dash/user-table/user-table.component';\r\nimport { AfpayComponent } from './components/user_components/afpay/afpay.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MyNavComponent,\r\n    MyDashboardComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    AdminLoginComponent,\r\n    AdminNavComponent,    \r\n    BookDashComponent, BookTableComponent,\r\n    UserDashComponent,\r\n    BookDialogComponent,\r\n    BookDelWarnComponent,\r\n    BookEditComponent,\r\n    ConfBorrComponent,\r\n    CollectionDashComponent,\r\n    BookmarksDashComponent,\r\n    // DueDashComponent,\r\n    SuggestBookComponent,\r\n    UnBorrowComponent,\r\n    NotificationsComponent,\r\n    UserTableComponent,\r\n    AfpayComponent, \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,    \r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatProgressSpinnerModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    \r\n    MatDatepickerModule,      \r\n    MatNativeDateModule,\r\n    MatRadioModule, \r\n    MatOptionModule,\r\n    MatSlideToggleModule,\r\n\r\n    MatDialogModule,\r\n    \r\n    FlashMessagesModule,\r\n\r\n    NgFlashMessagesModule,\r\n\r\n    HttpClientModule,\r\n\r\n    NgxPaginationModule,\r\n\r\n    \r\n\r\n    HttpModule,  \r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: () => {\r\n          return localStorage.getItem('id_token');\r\n        }\r\n      }\r\n    }), MatTableModule, MatPaginatorModule, MatSortModule \r\n  ], \r\n  entryComponents: [\r\n    BookDialogComponent,\r\n    BookDelWarnComponent,\r\n    BookEditComponent,\r\n    ConfBorrComponent,\r\n    UnBorrowComponent\r\n  ],\r\n  exports: [      \r\n    MatButtonModule,      \r\n    MatMenuModule,      \r\n    MatToolbarModule,      \r\n    MatIconModule,      \r\n    MatCardModule,      \r\n    BrowserAnimationsModule,      \r\n    MatFormFieldModule,      \r\n    MatInputModule,      \r\n    MatDatepickerModule,      \r\n    MatNativeDateModule,      \r\n    MatRadioModule,      \r\n    MatSelectModule,      \r\n    MatOptionModule,      \r\n    MatSlideToggleModule      \r\n  ],  \r\n  providers: [ValidateService, AuthService, FlashMessagesService, JwtHelperService,\r\n    {provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"/*\\r\\n  Login form css\\r\\n*/\\r\\n\\r\\n  \\r\\n.mat-card {    \\r\\n    text-align: -webkit-center;    \\r\\n  }\\r\\n\\r\\n  \\r\\n.demo-toolbar {    \\r\\n    display: flex;    \\r\\n    align-items: center;    \\r\\n    width: 100%;        \\r\\n  }\\r\\n\\r\\n  \\r\\n.demo-form {    \\r\\n    min-width: 150px;    \\r\\n    max-width: 500px;    \\r\\n    width: 100%;    \\r\\n  }\\r\\n\\r\\n  \\r\\n.demo-full-width {    \\r\\n    width: 100%;    \\r\\n  }\\r\\n\\r\\n  \\r\\nbody {    \\r\\n    margin: 0;    \\r\\n    font-family: Roboto, sans-serif;      \\r\\n  }\\r\\n\\r\\n  \\r\\nmatInput {\\r\\n    font-size: 30px;\\r\\n  }\\r\\n\\r\\n  \\r\\nmat-card {    \\r\\n    max-width: 80%;    \\r\\n    margin: 2em auto;    \\r\\n    text-align: center;\\r\\n    font-size: 30px;    \\r\\n  }\\r\\n\\r\\n  \\r\\nmat-toolbar-row {    \\r\\n    justify-content: space-between;    \\r\\n  }\\r\\n\\r\\n  \\r\\n.done {    \\r\\n    position: fixed;    \\r\\n    bottom: 20px;    \\r\\n    right: 20px;    \\r\\n    color: white;    \\r\\n  }\\r\\n\\r\\n  \\r\\n.content-center {    \\r\\n    text-align: -webkit-center;         \\r\\n  } \\r\\n  \"","module.exports = \"<!-- Main Toolbar of an App -->    \\r\\n<mat-toolbar color=\\\"primary\\\">    \\r\\n  <span>UCSC E-Library System</span>      \\r\\n\\r\\n</mat-toolbar>\\r\\n\\r\\n<mat-card>\\r\\n    <!-- Title of an Card -->    \\r\\n    <mat-card-title>    \\r\\n      Admin Login\\r\\n    </mat-card-title>\\r\\n    \\r\\n    <mat-card-content>    \\r\\n      <form (submit)=\\\"loginAdmin()\\\">    \\r\\n          <table>    \\r\\n              <tr>    \\r\\n                  <td colspan=\\\"2\\\">    \\r\\n                      <mat-form-field class=\\\"demo-full-width\\\">    \\r\\n                          <input matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">    \\r\\n                      </mat-form-field>    \\r\\n                  </td>                      \\r\\n              </tr>    \\r\\n              <tr>    \\r\\n                <td colspan=\\\"2\\\">    \\r\\n                  <mat-form-field class=\\\"demo-full-width\\\">    \\r\\n                      <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">    \\r\\n                  </mat-form-field>    \\r\\n              </td>        \\r\\n              </tr>    \\r\\n                \\r\\n              <tr>    \\r\\n                  <td colspan=\\\"2\\\">    \\r\\n  \\r\\n                  </td>    \\r\\n              </tr>    \\r\\n              <tr>    \\r\\n                  <td colspan=\\\"2\\\" class=\\\"content-center\\\">    \\r\\n                      <button mat-raised-button color=\\\"primary\\\" style=\\\"margin: 8%\\\" type=\\\"submit\\\">Submit</button>                          \\r\\n                  </td>    \\r\\n              </tr>    \\r\\n          </table>    \\r\\n      </form>          \\r\\n    </mat-card-content> \\r\\n    \\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-admin-login',\r\n  templateUrl: './admin-login.component.html',\r\n  styleUrls: ['./admin-login.component.css']\r\n})\r\nexport class AdminLoginComponent implements OnInit {\r\n\r\n  username: String\r\n  password: String\r\n\r\n  constructor(private authService: AuthService,\r\n              private router: Router,              \r\n              private ngFlashMessageService: NgFlashMessageService) { }\r\n\r\n  ngOnInit() {\r\n    if (this.authService.isAdminLoggedIn()) {\r\n      this.router.navigate(['/admin-books']);\r\n    }\r\n  }\r\n\r\n  loginAdmin(){\r\n    const admin = {\r\n      username: this.username,\r\n      password: this.password\r\n    }\r\n    console.log('trying to authenticate with api');    \r\n    \r\n      if (1) {        \r\n        console.log('Forwording to admin page.........');\r\n        this.router.navigate(['/admin-books']);\r\n      } else {\r\n        \r\n        this.router.navigate(['/admin/login']);\r\n        this.username = null\r\n        this.password = null\r\n      }\r\n       \r\n  }\r\n}\r\n","module.exports = \".sidenav-container {\\r\\n  height: 100%;  \\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n  width: 200px;\\r\\n  box-shadow: 3px 0 6px rgba(0,0,0,.24);\\r\\n  color:#97b3ce;\\r\\n  background-color:#1f2637;\\r\\n}\\r\\n\\r\\n.center-toolbar {    \\r\\n  display: flex;    \\r\\n  align-items: center;    \\r\\n  width: 100%;        \\r\\n}\\r\\n\\r\\n.side-nav-items {\\r\\n  text-decoration:none;        \\r\\n  color:#97b3ce;\\r\\n  transition:all .2s ease-in-out\\r\\n}\\r\\n\\r\\n.side-nav-active-item{\\r\\n  background-color:#009bfc;\\r\\n  text-decoration:none;        \\r\\n  color:#97b3ce;\\r\\n  transition:all .2s ease-in-out\\r\\n}\\r\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n  <mat-sidenav\\r\\n    #drawer\\r\\n    class=\\\"sidenav\\\"\\r\\n    fixedInViewport=\\\"true\\\"\\r\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\r\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\r\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\r\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\r\\n    <mat-nav-list>\\r\\n\\r\\n      <a mat-list-item (click)=\\\"switchToManageBooks()\\\" \\r\\n         [ngClass]=\\\"{'side-nav-active-item': (apptitle === 'Manage Books'),\\r\\n                     'side-nav-items': !(apptitle === 'Manage Books')}\\\">\\r\\n      <mat-icon aria-hidden=\\\"true\\\">book</mat-icon>Manage Books</a>      \\r\\n      <a mat-list-item (click)=\\\"switchToManageUsers()\\\"\\r\\n         [ngClass]=\\\"{'side-nav-active-item': (apptitle === 'Manage Users'),\\r\\n                     'side-nav-items': !(apptitle === 'Manage Users')}\\\">\\r\\n      <mat-icon aria-hidden=\\\"true\\\">person</mat-icon> Manage Users</a>\\r\\n      <a mat-list-item (click)=\\\"swithToNotifications()\\\"\\r\\n         [ngClass]=\\\"{'side-nav-active-item': (apptitle === 'Notifications'),\\r\\n                     'side-nav-items': !(apptitle === 'Notifications')}\\\">\\r\\n      <mat-icon aria-hidden=\\\"true\\\">notification_important</mat-icon>Notifications</a>\\r\\n      <a mat-list-item (click)=\\\"switchToManageFines()\\\"\\r\\n         [ngClass]=\\\"{'side-nav-active-item': (apptitle === 'Manage Fines'),\\r\\n                     'side-nav-items': !(apptitle === 'Manage Fines')}\\\">\\r\\n      <mat-icon aria-hidden=\\\"true\\\">attach_money</mat-icon> Manage Fines</a>      \\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content>\\r\\n    <mat-toolbar color=\\\"primary\\\">\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        aria-label=\\\"Toggle sidenav\\\"\\r\\n        mat-icon-button\\r\\n        (click)=\\\"drawer.toggle()\\\"\\r\\n        *ngIf=\\\"isHandset$ | async\\\">\\r\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\r\\n      </button>\\r\\n      <span>{{ apptitle }}</span>\\r\\n      <span class=\\\"center-toolbar\\\"></span>\\r\\n      <button *ngIf=\\\"authService.isAdminLoggedIn()\\\" mat-button routerLink=\\\"/admin-books\\\">Dashboard</button>\\r\\n      <button *ngIf=\\\"authService.isAdminLoggedIn()\\\" mat-button routerLink=\\\"/admin/profile\\\">Profile</button>\\r\\n      <button *ngIf=\\\"authService.isAdminLoggedIn()\\\" mat-button (click)=\\\"onLogoutClick()\\\">Logout</button>\\r\\n    </mat-toolbar>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Router } from '@angular/router';\r\nimport { INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS } from '@angular/platform-browser-dynamic/src/platform_providers';\r\n\r\n\r\n@Component({\r\n  selector: 'admin-nav',\r\n  templateUrl: './admin-nav.component.html',\r\n  styleUrls: ['./admin-nav.component.css']\r\n})\r\nexport class AdminNavComponent {\r\n  apptitle: String = 'Manage Books';  \r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches)\r\n    );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver,\r\n              private authService: AuthService,\r\n              private flashMessage: FlashMessagesService,\r\n              private router: Router) \r\n              {\r\n                if (this.router.url === '/admin-books') {\r\n                  this.apptitle = 'Manage Books';\r\n                } else if(this.router.url === '/admin-users') {\r\n                  this.apptitle = 'Manage Users';\r\n                } else if(this.router.url === '/admin-fines') {\r\n                  this.apptitle = 'Manage Fines';   \r\n                } else if(this.router.url === '/admin-notices'){\r\n                  this.apptitle = 'Notifications';\r\n                }\r\n               }\r\n\r\n  onLogoutClick() {\r\n    console.log('You clicked Logout for admin');\r\n    this.authService.adminLogout();\r\n    this.flashMessage.show('You have logged out as an admin', { cssClass: 'alert-success', timeout: 3000 });\r\n    this.router.navigate(['/admin-login']);\r\n    return false;\r\n  }\r\n\r\n  switchToManageBooks(){\r\n    this.apptitle = 'Manage Books';        \r\n    this.router.navigate(['/admin-books']);\r\n  }\r\n\r\n  switchToManageUsers(){\r\n    this.apptitle = 'Manage Users';\r\n    this.router.navigate(['/admin-users']);\r\n  }\r\n\r\n  switchToManageFines(){\r\n    this.apptitle = 'Manage Fines';      \r\n  }\r\n\r\n  swithToNotifications(){\r\n    this.apptitle = 'Notifications';\r\n    this.router.navigate(['/admin-notices']);\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \".grid-mobile-container {\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\\r\\n.grid-web-container {\\r\\n  margin-left: 220px;\\r\\n}\\r\\n\\r\\n.dashboard-card {\\r\\n  position: absolute;\\r\\n  top: 15px;\\r\\n  left: 15px;\\r\\n  right: 15px;\\r\\n  bottom: 15px;  \\r\\n}\\r\\n\\r\\n.more-button {\\r\\n  position: absolute;\\r\\n  top: 5px;\\r\\n  right: 10px;\\r\\n}\\r\\n\\r\\n.dashboard-card-content {\\r\\n  text-align: center;\\r\\n}\\r\\n\"","module.exports = \"<admin-nav></admin-nav>\\r\\n<div [ngClass]=\\\"{'grid-mobile-container': isMobileDashboard(), 'grid-web-container': !isMobileDashboard()}\\\">\\r\\n  <h1 class=\\\"mat-h1\\\">Book Dashboard</h1>\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\r\\n    <mat-grid-tile *ngFor=\\\"let card of cards\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>\\r\\n            {{card.title}}\\r\\n            <button mat-mini-fab class=\\\"more-button\\\" color=\\\"primary\\\" (click)=\\\"addBook()\\\" aria-label=\\\"Toggle menu\\\">\\r\\n              <mat-icon>note_add</mat-icon>\\r\\n            </button>            \\r\\n          </mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\r\\n          <app-book-table></app-book-table>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\"","import { Component, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { BooksService } from '../../../services/books.service';\r\nimport { BookDialogComponent } from './book-dialog/book-dialog.component';\r\nimport { BookTableComponent } from './book-table/book-table.component';\r\n\r\n@Component({\r\n  selector: 'book-dash',\r\n  templateUrl: './book-dash.component.html',\r\n  styleUrls: ['./book-dash.component.css']\r\n})\r\nexport class BookDashComponent {\r\n\r\n  @ViewChild(BookTableComponent) tablecomp: BookTableComponent\r\n\r\n  innerWidth: number\r\n\r\n  constructor(private dialog?: MatDialog,\r\n              private bookService?: BooksService,\r\n              ){}\r\n\r\n  cards = [\r\n    { title: '', cols: 2, rows: 2 }\r\n  ];\r\n\r\n  isMobileDashboard() {\r\n    // Return false for web view.\r\n\r\n    if (innerWidth > 960 || (innerWidth > 600 && innerWidth < 639)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  addBook(){    \r\n    console.log('Adding a book');\r\n    // code here\r\n    const dialogRef = this.dialog.open(BookDialogComponent, {\r\n      height: '575px',\r\n      width: '400px',\r\n      data: {}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The Add-Book-Dialog was closed');\r\n      this.tablecomp.refreshAPIData();\r\n    });\r\n    \r\n  }\r\n}\r\n","module.exports = \".example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n  \\r\\n  .container{\\r\\n    margin-top: 10px\\r\\n  }\\r\\n  \\r\\n  .green-btn{\\r\\n    background-color: #4CAF50\\r\\n  }\\r\\n  \\r\\n  .example-button-row {\\r\\n     display: flex; \\r\\n     align-items: center; \\r\\n     justify-content: space-around; \\r\\n  }\\r\\n  \\r\\n  .save-btn{\\r\\n    padding-top: 10%;\\r\\n  }\\r\\n  \\r\\n  .progress-spin-vals{\\r\\n    margin: 0 130px;\\r\\n  }\\r\\n  \\r\\n  .warn-text{\\r\\n    margin-left: 12.5%\\r\\n  }\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <span>Add Book</span>\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    <button mat-mini-fab (click)=\\\"onNoClick()\\\" color=\\\"primary\\\" aria-label=\\\"Toggle menu\\\">\\r\\n      <mat-icon>cancel</mat-icon>\\r\\n    </button>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n<mat-card-content>\\r\\n  <div class=\\\"container\\\">\\r\\n    <form [formGroup]=\\\"_bookForm\\\" (submit)=\\\"onSubmit()\\\">\\r\\n      <mat-form-field class=\\\"example-form\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Title</mat-label>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"Title\\\" placeholder=\\\"Title\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-form\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Author</mat-label>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"Author\\\" placeholder=\\\"Author\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-form\\\" appearance=\\\"outline\\\">\\r\\n        <mat-select placeholder=\\\"Availability\\\" formControlName=\\\"Available\\\">\\r\\n          <mat-option value=\\\"true\\\">Yes</mat-option>\\r\\n          <mat-option value=\\\"false\\\">No</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-form\\\" appearance=\\\"outline\\\">\\r\\n        <mat-select placeholder=\\\"Category\\\" formControlName=\\\"Category\\\">\\r\\n          <mat-option value=\\\"Arts-and-Music\\\">Arts & Music</mat-option>\\r\\n          <mat-option value=\\\"Biographies\\\">Biographies</mat-option>\\r\\n          <mat-option value=\\\"Business\\\">Business</mat-option>\\r\\n          <mat-option value=\\\"Computers-and-Tech\\\">Computers & Tech</mat-option>\\r\\n          <mat-option value=\\\"Education\\\">Educational</mat-option>\\r\\n          <mat-option value=\\\"History\\\">History</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      \\r\\n      \\r\\n      <div class=\\\"button-row\\\">\\r\\n        <mat-label>Attach Image </mat-label>\\r\\n        <button mat-button color=\\\"primary\\\" mat-mini-fab type=\\\"button\\\" (click)=\\\"imgFileInput.click()\\\">\\r\\n          <mat-icon>attachment</mat-icon>\\r\\n        </button>        \\r\\n      </div>\\r\\n      \\r\\n      <input hidden type=\\\"file\\\" #imgFileInput (change)=\\\"changeImage($event)\\\" accept=\\\".png,.jpg\\\">\\r\\n              \\r\\n      <div class=\\\"save-btn\\\">\\r\\n        <button *ngIf=\\\"imageAvailable()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\r\\n        <button *ngIf=\\\"allSetToGo()\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left: 10px\\\" (click)=\\\"commit()\\\">Commit</button>\\r\\n      </div>\\r\\n            \\r\\n      <mat-progress-spinner \\r\\n        class=\\\"progress-spin-vals\\\"\\r\\n        diameter=\\\"40\\\"       \\r\\n        color=\\\"primary\\\"\\r\\n        mode=\\\"determinate\\\"\\r\\n        [value]=\\\"uploadPercent\\\">        \\r\\n      </mat-progress-spinner>\\r\\n\\r\\n      <div class=\\\"warn-text\\\" *ngIf=\\\"allSetToGo()\\\">You must commit to save to database</div>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n</mat-card-content>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms/src/model';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { BooksService } from '../../../../services/books.service';\r\nimport {UploadService} from '../../../../services/upload.service'\r\nimport { Validators } from '@angular/forms';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n\r\n\r\n// aws.config.update({\r\n//   secretAccessKey: \"pCyaSUPJq4+BMtzbaorBwfpOxxtCo1f1HV8hWOWc\",\r\n//   accessKeyId: \"AKIAIHU6I6EDKXHPJLWA\",\r\n//   region: 'us-east-1' //E.g us-east-1\r\n//  });\r\n\r\n\r\n@Component({\r\n  selector: 'app-book-dialog',\r\n  templateUrl: './book-dialog.component.html',\r\n  styleUrls: ['./book-dialog.component.css']  \r\n})\r\nexport class BookDialogComponent implements OnInit {\r\n\r\n  public _bookForm: FormGroup;\r\n\r\n  //ImageFile from input\r\n  imageFile: object;\r\n\r\n  //This is the proper imageURL we should receive\r\n  image: string = null;\r\n  \r\n  //object downloadURL\r\n  downloadURL: Observable<string>;\r\n  uploadPercent: string = '0.00';\r\n\r\n  constructor(private _formBuilder: FormBuilder,\r\n              private dialogRef: MatDialogRef<any>,\r\n              private _bookService: BooksService,\r\n              private uploadservice: UploadService,              \r\n              private ngFlashMessageService: NgFlashMessageService,\r\n              @Inject(MAT_DIALOG_DATA) public data: any) {}\r\n\r\n  onNoClick(): void{\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._bookForm = this._formBuilder.group({\r\n      _id: [],\r\n      Title: ['', [Validators.required]],\r\n      Author: ['', [Validators.required]],\r\n      Category: ['Arts-and-Music', [Validators.required]],\r\n      Available: ['', [Validators.required]],          \r\n    })\r\n  }\r\n\r\n  ngDoCheck(){       \r\n        \r\n  }\r\n\r\n  onSubmit(){\r\n\r\n    //Firebase Image upload should be here \r\n    \r\n    this.uploadImage();\r\n    \r\n\r\n    //Wait until there is a value for this.image\r\n    while(this.image != null){            \r\n      return true;          \r\n    }\r\n       \r\n  }\r\n\r\n  commit(){\r\n    const book = {\r\n      title: this._bookForm.value.Title,\r\n      author: this._bookForm.value.Author,\r\n      category: this._bookForm.value.Category,\r\n      image: this.image,\r\n      available: (this._bookForm.value.Available === 'true')\r\n    }\r\n    console.log('Before Registering the book: ', book);\r\n    //Register a book\r\n    this._bookService.registerBook(book).subscribe(data=>{\r\n      console.log('data received: ',data);\r\n      if (data.success) {\r\n        this.dialogRef.close();\r\n        this.ngFlashMessageService.showFlashMessage({          \r\n          messages: [\"Book Registered Successfully\"],         \r\n          dismissible: true,           \r\n          timeout: 3000,          \r\n          type: 'info'\r\n        }); \r\n      }else{\r\n        this.dialogRef.close();\r\n        this.ngFlashMessageService.showFlashMessage({          \r\n          messages: [\"Book Failed to Register\"],           \r\n          dismissible: true,           \r\n          timeout: 3000,          \r\n          type: 'danger'\r\n        });\r\n      }\r\n    });  \r\n  }\r\n\r\n  changeImage(event){\r\n    //Assigns the attached image to class scope variable\r\n    \r\n    this.imageFile = event.target.files[0]; \r\n    var reader = new FileReader();\r\n            reader.onload = (event: any) => {\r\n                this.image = event.target.result;\r\n                console.log(this.image)\r\n            }        \r\n    \r\n    this.image = \"https://azureappdata.blob.core.windows.net/file/bookdeck/\" + event.target.files[0].name;\r\n    console.log('Image path', event.target.files[0].name)\r\n  }\r\n\r\n  uploadImage(){\r\n    console.log(this.imageFile);\r\n    this.uploadservice.uploadFile(this.imageFile);\r\n    console.log('This is the address of file',this.image);\r\n  }  \r\n\r\n\r\n\r\n  \r\n  allSetToGo(){\r\n    var flag = false;\r\n    console.log(this.image)\r\n    while (this.image != null) {\r\n      // while an imageURL is returned check if all fields are not empty\r\n      if (this._bookForm.value.Title != '' && this._bookForm.value.Author != '') {\r\n        flag = true;\r\n      }\r\n      break;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  imageAvailable(){\r\n    var flag = false;\r\n    while (this.imageFile != undefined) {\r\n      //checks if image upload button is clicked\r\n      flag = true\r\n      break;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","module.exports = \".example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n  \\r\\n  .container{\\r\\n    margin-top: 10px\\r\\n  }\\r\\n  \\r\\n  .green-btn{\\r\\n    background-color: #4CAF50\\r\\n  }\\r\\n  \\r\\n  .progress-spin-vals{\\r\\n    margin: 0 220px;\\r\\n  }\\r\\n  \\r\\n  .warn-text{\\r\\n    margin-left: 12.5%\\r\\n  }\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <span>Edit Book</span>\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    <button mat-mini-fab (click)=\\\"onNoClick()\\\" color=\\\"primary\\\" aria-label=\\\"Toggle menu\\\">\\r\\n      <mat-icon>cancel</mat-icon>\\r\\n    </button>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n<mat-card-content>\\r\\n  <div class=\\\"container\\\">\\r\\n    <form [formGroup]=\\\"_editBookForm\\\" (submit)=\\\"onSubmitEdit()\\\">\\r\\n      <mat-form-field class=\\\"example-form\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Title</mat-label>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"Title\\\" placeholder=\\\"Title\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-form\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Author</mat-label>\\r\\n        <input matInput type=\\\"text\\\" formControlName=\\\"Author\\\" placeholder=\\\"Author\\\">\\r\\n      </mat-form-field>      \\r\\n      <mat-form-field class=\\\"example-form\\\" appearance=\\\"outline\\\">\\r\\n        <mat-select placeholder=\\\"Category\\\" formControlName=\\\"Category\\\">\\r\\n          <mat-option value=\\\"Arts-and-Music\\\">Arts & Music</mat-option>\\r\\n          <mat-option value=\\\"Biographies\\\">Biographies</mat-option>\\r\\n          <mat-option value=\\\"Business\\\">Business</mat-option>\\r\\n          <mat-option value=\\\"Computers-and-Tech\\\">Computers & Tech</mat-option>\\r\\n          <mat-option value=\\\"Education\\\">Educational</mat-option>\\r\\n          <mat-option value=\\\"History\\\">History</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <div class=\\\"button-row\\\">\\r\\n        <mat-label>Attach Image </mat-label>\\r\\n        <button mat-button color=\\\"primary\\\" mat-mini-fab type=\\\"button\\\" (click)=\\\"imgFileInput.click()\\\">\\r\\n          <mat-icon>attachment</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <input hidden type=\\\"file\\\" #imgFileInput (change)=\\\"changeImage($event)\\\" accept=\\\".png,.jpg\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"save-btn\\\">\\r\\n        <button *ngIf=\\\"imageAvailable()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\r\\n        <button *ngIf=\\\"allSetToGo()\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left: 10px\\\" (click)=\\\"commit()\\\">Commit</button>\\r\\n      </div>\\r\\n\\r\\n      <mat-progress-spinner class=\\\"progress-spin-vals\\\" diameter=\\\"35\\\" color=\\\"primary\\\" mode=\\\"determinate\\\" [value]=\\\"uploadPercent\\\">\\r\\n      </mat-progress-spinner>\\r\\n\\r\\n      <div class=\\\"warn-text\\\" *ngIf=\\\"allSetToGo()\\\">You must commit to save to database</div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</mat-card-content>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms/src/model';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { BooksService } from '../../../../services/books.service';\r\n\r\n\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-book-edit',\r\n  templateUrl: './book-edit.component.html',\r\n  styleUrls: ['./book-edit.component.css']\r\n})\r\nexport class BookEditComponent implements OnInit {\r\n  public _editBookForm: FormGroup;\r\n\r\n  //ImageFile from input\r\n  imageFile: object;\r\n\r\n\r\n\r\n  //This is the proper imageURL we should receive\r\n  image: string = null;\r\n\r\n  //object downloadURL\r\n  downloadURL: Observable<string>;\r\n  uploadPercent: string = '0.00';\r\n  \r\n  constructor(private dialogRef: MatDialogRef<any>,\r\n    private _formBuilder: FormBuilder,\r\n    private _bookService: BooksService,    \r\n    private ngFlashMessageService: NgFlashMessageService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  ngOnInit() {      \r\n    this._editBookForm = this._formBuilder.group({\r\n      _id: [],\r\n      Title: [this.data.bookTitle , [Validators.required]],\r\n      Author: [this.data.bookAuthor, [Validators.required]],      \r\n      Category: [this.data.bookCategory, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  changeImage(event){\r\n    //Assigns the attached image to class scope variable\r\n    this.imageFile = event.target.files[0];         \r\n  }\r\n\r\n  onSubmitEdit() {\r\n     //Firebase Image upload should be here \r\n    \r\n    this.uploadImage();\r\n    \r\n\r\n    //Wait until there is a value for this.image\r\n    while(this.image != null){            \r\n      return true;          \r\n    }   \r\n  }\r\n\r\n  commit(){\r\n    \r\n    const editedBook = {\r\n      title: this._editBookForm.value.Title,\r\n      author: this._editBookForm.value.Author,            \r\n      category: (this._editBookForm.value.Category),\r\n      image: this.image      \r\n    }\r\n\r\n    //Edit Book - you can't edit the availability through this though\r\n    this._bookService.editBook(this.data.editId, editedBook).subscribe(data=>{\r\n      console.log('On Edit Data received: ', data);\r\n      if (data.success) {\r\n        this.dialogRef.close();\r\n        this.ngFlashMessageService.showFlashMessage({          \r\n          messages: [\"Book updated successfully\"],         \r\n          dismissible: true,           \r\n          timeout: 3000,          \r\n          type: 'info'\r\n        });\r\n      }else{\r\n        this.dialogRef.close();\r\n        this.ngFlashMessageService.showFlashMessage({          \r\n          messages: [\"Book Failed to update\"],           \r\n          dismissible: true,           \r\n          timeout: 3000,          \r\n          type: 'danger'\r\n        });\r\n      }      \r\n    })\r\n  }\r\n\r\n  uploadImage(){\r\n    \r\n    \r\n  }  \r\n\r\n  allSetToGo(){\r\n    var flag = false;\r\n    while (this.image != null) {\r\n      // while an imageURL is returned check if all fields are not empty\r\n      if (this._editBookForm.value.Title != '' && this._editBookForm.value.Author != '') {\r\n        flag = true;\r\n      }\r\n      break;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  imageAvailable(){\r\n    var flag = false;\r\n    while (this.imageFile != undefined) {\r\n      //checks if image upload button is clicked\r\n      flag = true\r\n      break;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n}\r\n","module.exports = \".example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n\\r\\n.middlespanner{\\r\\n  justify-content: space-between; \\r\\n}\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <span>Remove the book ?</span>\\r\\n    <span class=\\\"example-spacer\\\"></span>    \\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n<div mat-dialog-actions style=\\\"margin-left: 3%; margin-right: 3%;\\\">\\r\\n      <button mat-button class=\\\"btn btn-danger\\\" (click)=\\\"confirmDelete()\\\">Delete</button>      \\r\\n      <button mat-button class=\\\"btn btn-primary\\\" (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { BooksService } from '../../../../../services/books.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-book-del-warn',\r\n  templateUrl: './book-del-warn.component.html',\r\n  styleUrls: ['./book-del-warn.component.css']\r\n})\r\nexport class BookDelWarnComponent implements OnInit {\r\n\r\n  constructor(private dialogRef: MatDialogRef<any>,              \r\n              private _bookService: BooksService,              \r\n              private ngFlashMessageService: NgFlashMessageService,\r\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  onNoClick(): void{\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  confirmDelete(){\r\n    //Code here to delete after warn\r\n\r\n    console.log('This will be removed: ', this.data.deleteID);\r\n\r\n    this._bookService.deleteBook(this.data.deleteID).subscribe(Rdata => {\r\n      console.log('delete status ', Rdata);\r\n      if (Rdata.success) {\r\n        this.dialogRef.close();\r\n        this.ngFlashMessageService.showFlashMessage({          \r\n          messages: [\"Deleted Successfully\"],         \r\n          dismissible: true,           \r\n          timeout: 8000,          \r\n          type: 'info'\r\n        });        \r\n      } else {\r\n        this.dialogRef.close();\r\n        this.ngFlashMessageService.showFlashMessage({          \r\n          messages: [\"Failed to delete\"],           \r\n          dismissible: true,           \r\n          timeout: 8000,          \r\n          type: 'danger'\r\n        });\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n}\r\n","module.exports = \"/* Structure */\\r\\n.example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    max-height: 500px;\\r\\n    min-width: 300px;\\r\\n    position: relative;\\r\\n  }\\r\\n.example-header {\\r\\n    min-height: 64px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    padding-left: 24px;\\r\\n    font-size: 20px;\\r\\n  }\\r\\n.example-table {\\r\\n    overflow: auto;\\r\\n    min-height: 300px;\\r\\n  }\\r\\n.example-loading-shade {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    bottom: 56px;\\r\\n    right: 0;\\r\\n    background: rgba(0, 0, 0, 0.15);\\r\\n    z-index: 1;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n.example-rate-limit-reached {\\r\\n    color: #980000;\\r\\n    max-width: 360px;\\r\\n    text-align: center;\\r\\n  }\\r\\n/* Column Widths */\\r\\n.mat-column-number,\\r\\n  .mat-column-state {\\r\\n    max-width: 64px;\\r\\n    text-align: left\\r\\n  }\\r\\n.mat-column-created {\\r\\n    max-width: 124px;\\r\\n  }  \"","module.exports = \"<mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search Results\\\">\\r\\n  </mat-form-field>\\r\\n        <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n            <!--_id-->\\r\\n            <ng-container matColumnDef=\\\"_id\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>_id</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row._id}} </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!--title-->\\r\\n            <ng-container matColumnDef=\\\"title\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>title</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.title}} </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!--author-->    \\r\\n            <ng-container matColumnDef=\\\"author\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>author</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\" class=\\\"mycolor2\\\"> {{row.author }} </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!--category-->\\r\\n            <ng-container matColumnDef=\\\"category\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>category</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\" class=\\\"mycolor2\\\"> {{row.category}} </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!--image-->\\r\\n            <ng-container matColumnDef=\\\"image\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>image</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\" class=\\\"mycolor2\\\">\\r\\n                    <a href=\\\"{{row.image}}\\\" target=\\\"_blank\\\">\\r\\n                        <mat-icon>image</mat-icon>\\r\\n                    </a>  \\r\\n                </mat-cell>\\r\\n            </ng-container>\\r\\n            \\r\\n            <!--available-->\\r\\n            <ng-container matColumnDef=\\\"available\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>availability</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.available }} </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"action\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>action</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\">\\r\\n                    <button mat-icon-button (click)=\\\"editBook(row._id, row.title, row.author, row.available, row.category)\\\" aria-label=\\\"Toggle menu\\\">\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button (click)=\\\"deleteBook(row._id)\\\" aria-label=\\\"Toggle menu\\\">\\r\\n                        <mat-icon>delete</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button *ngIf=\\\"!row.available\\\" (click)=\\\"makeBookAvailable(row._id)\\\" aria-label=\\\"Toggle menu\\\">\\r\\n                        <mat-icon>compare_arrows</mat-icon>\\r\\n                    </button>\\r\\n                </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>\\r\\n        <mat-paginator #paginator\\r\\n                [length]=\\\"dataSource.filteredData.length\\\"\\r\\n                [pageIndex]=\\\"0\\\"\\r\\n                [pageSize]=\\\"5\\\"\\r\\n                [pageSizeOptions]=\\\"[5, 9]\\\">\\r\\n        </mat-paginator>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialog } from '@angular/material';\r\n\r\nimport { BooksService } from '../../../../services/books.service';\r\nimport { BookDelWarnComponent } from './book-del-warn/book-del-warn.component';\r\nimport { BookDashComponent } from '../book-dash.component';\r\nimport { BookEditComponent } from '../book-edit/book-edit.component';\r\n\r\nimport { Book } from '../../../../models/Book';\r\nimport { UserService } from '../../../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-book-table',\r\n  templateUrl: './book-table.component.html',\r\n  styleUrls: ['./book-table.component.css']\r\n})\r\nexport class BookTableComponent implements OnInit {\r\n  bookdata: any\r\n\r\n  displayedColumns = ['title', 'author', 'category', 'image', 'available', 'action'];\r\n  dataSource = new MatTableDataSource();\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  \r\n\r\n  constructor(private bookService: BooksService,\r\n              private userService: UserService,\r\n              private dialog?: MatDialog) {              \r\n              \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.refreshAPIData();\r\n  }\r\n\r\n  ngAfterViewInit() {    \r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }  \r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  editBook(bookID, titleVal, authorVal, availVal, catVal){\r\n    \r\n    console.log('Editing Book: ',bookID);  \r\n\r\n    // code here to edit book\r\n    const dialogRef = this.dialog.open(BookEditComponent,{\r\n      height: '560px',\r\n      width: '600px',\r\n      data: {editId:bookID, \r\n             bookTitle:titleVal , \r\n             bookAuthor:authorVal , \r\n             bookAvailability:availVal,\r\n             bookCategory:catVal\r\n            }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The edit-dialog was closed'); \r\n      this.refreshAPIData();\r\n    });\r\n\r\n  }\r\n\r\n  refreshAPIData(){\r\n    //Dynamic Data check bro this was the only way\r\n    return this.bookService.getBooks().subscribe((dataBooks: Book[]) => {\r\n      this.dataSource.data = dataBooks;\r\n    });\r\n  }\r\n\r\n  deleteBook(bookID){\r\n    \r\n    console.log('Deleting Book ID: ', bookID);\r\n\r\n    // code here to delete book\r\n\r\n    const dialogRef = this.dialog.open(BookDelWarnComponent, {      \r\n      data: {deleteID: bookID}\r\n    })\r\n    \r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The delete-dialog was closed'); \r\n      this.refreshAPIData();\r\n    });\r\n    \r\n  }\r\n\r\n  makeBookAvailable(bookID){\r\n    console.log('trying to make', bookID, 'available');\r\n\r\n    //For patching the book with available true\r\n    var update = {\r\n      available: true\r\n    }\r\n    var borrowBook = {\r\n      bookId: bookID\r\n    }\r\n\r\n    this.bookService.makeAvailable(bookID, update).subscribe(data=>{\r\n      console.log('book datas id: ', data.borrowedUser._id);    \r\n      //Remove the BookObject from the user.borrows\r\n      if (data.success) {\r\n        this.userService.removeBorrows(borrowBook, data.borrowedUser._id).subscribe(subData=>{\r\n          console.log('Book made available and removed from user.borrows');                    \r\n        })\r\n      }      \r\n      this.refreshAPIData();      \r\n    })\r\n\r\n\r\n    \r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","module.exports = \".grid-mobile-container {\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\\r\\n.grid-web-container {\\r\\n  margin-left: 220px;\\r\\n}\\r\\n\\r\\n.dashboard-card {\\r\\n  position: absolute;\\r\\n  top: 15px;\\r\\n  left: 15px;\\r\\n  right: 15px;\\r\\n  bottom: 15px;\\r\\n}\\r\\n\\r\\n.more-button {\\r\\n  position: absolute;\\r\\n  top: 5px;\\r\\n  right: 10px;\\r\\n}\\r\\n\\r\\n.dashboard-card-content {\\r\\n  text-align: center;\\r\\n}\"","module.exports = \"<admin-nav></admin-nav>\\r\\n<div [ngClass]=\\\"{'grid-mobile-container': isMobileDashboard(), 'grid-web-container': !isMobileDashboard()}\\\">\\r\\n  <h1 class=\\\"mat-h1\\\">\\r\\n    <div *ngIf=\\\"messages.length\\\">Notifications</div>\\r\\n    <div *ngIf=\\\"!messages.length\\\">No Notifications Received</div>\\r\\n  </h1>\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\r\\n    <div *ngFor=\\\"let message of messages\\\">\\r\\n      <mat-card>\\r\\n        <mat-card-subtitle>\\r\\n          {{ message.message }}\\r\\n        </mat-card-subtitle>\\r\\n        <mat-card-actions>\\r\\n          <button mat-button (click)=\\\"deleteNotification(message.id)\\\">Dismiss</button>          \\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </mat-grid-list>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { NotificationsService } from '../../../services/notifications.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\n@Component({\r\n  selector: 'notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.css']\r\n})\r\nexport class NotificationsComponent {\r\n  constructor(private notificationService: NotificationsService,\r\n              private ngFlashMessageService: NgFlashMessageService){\r\n    this.getNotifications();\r\n  }\r\n  \r\n  messages = [];\r\n\r\n  isMobileDashboard() {\r\n    // Return false for web view.\r\n\r\n    if (innerWidth > 960 || (innerWidth > 600 && innerWidth < 639)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getNotifications(){\r\n    this.notificationService.getAllNotifications().subscribe(data => {\r\n      console.log(data);\r\n      \r\n      data.forEach(element => {\r\n        this.messages.push(\r\n          { message: element.message, id: element._id }\r\n        )\r\n      })       \r\n    })\r\n  }\r\n\r\n  deleteNotification(notiId){\r\n    this.notificationService.deleteNotificationById(notiId).subscribe(res => {\r\n      if (res.success) {\r\n        this.ngFlashMessageService.showFlashMessage({          \r\n          messages: [\"Notification Deleted\"],           \r\n          dismissible: true,           \r\n          timeout: 3000,          \r\n          type: 'info'\r\n        });\r\n        this.refreshNotifications();\r\n      } else {\r\n        \r\n      }\r\n    })\r\n  }\r\n\r\n  refreshNotifications(){\r\n    //empty the messages array\r\n    this.messages.length = 0\r\n\r\n    this.getNotifications();\r\n  }\r\n}\r\n","module.exports = \".grid-mobile-container {\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\\r\\n.grid-web-container {\\r\\n  margin-left: 220px;\\r\\n}\\r\\n\\r\\n.dashboard-card {\\r\\n  position: absolute;\\r\\n  top: 15px;\\r\\n  left: 15px;\\r\\n  right: 15px;\\r\\n  bottom: 15px;  \\r\\n}\\r\\n\\r\\n.more-button {\\r\\n  position: absolute;\\r\\n  top: 5px;\\r\\n  right: 10px;\\r\\n}\\r\\n\\r\\n.dashboard-card-content {\\r\\n  text-align: center;\\r\\n}\"","module.exports = \"<admin-nav></admin-nav>\\r\\n<div class=\\\"grid-container\\\" [ngClass]=\\\"{'grid-mobile-container': isMobileDashboard(), 'grid-web-container': !isMobileDashboard()}\\\">\\r\\n  <h1 class=\\\"mat-h1\\\">User Dashboard</h1>\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\r\\n    <mat-grid-tile *ngFor=\\\"let card of cards\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <mat-card-header>          \\r\\n        </mat-card-header>\\r\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\r\\n          <app-user-table></app-user-table>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'user-dash',\r\n  templateUrl: './user-dash.component.html',\r\n  styleUrls: ['./user-dash.component.css']\r\n})\r\nexport class UserDashComponent {\r\n  innerWidth: number\r\n\r\n  cards = [\r\n    { title: 'Card 1', cols: 2, rows: 1 },    \r\n  ];\r\n\r\n  isMobileDashboard() {\r\n    if (innerWidth > 960 || (innerWidth > 600 && innerWidth < 639)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search Results\\\">\\r\\n  </mat-form-field>\\r\\n        <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n            <!--_id-->\\r\\n            <ng-container matColumnDef=\\\"_id\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>_id</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\">  </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!--title-->\\r\\n            <ng-container matColumnDef=\\\"name\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>name</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.name}}  </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!--author-->    \\r\\n            <ng-container matColumnDef=\\\"username\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>username</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\" class=\\\"mycolor2\\\"> {{row.username}} </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!--category-->\\r\\n            <ng-container matColumnDef=\\\"category\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>category</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\" class=\\\"mycolor2\\\"> {{row.category}} </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!--image-->\\r\\n            <ng-container matColumnDef=\\\"image\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>image</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\" class=\\\"mycolor2\\\">\\r\\n                    <a href=\\\"{{row.image}}\\\" target=\\\"_blank\\\">\\r\\n                        <mat-icon>image</mat-icon>\\r\\n                    </a>  \\r\\n                </mat-cell>\\r\\n            </ng-container>\\r\\n            \\r\\n            <!--available-->\\r\\n            <ng-container matColumnDef=\\\"available\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>availability</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.available }} </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"action\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>action</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\">\\r\\n                    <button mat-icon-button aria-label=\\\"Toggle menu\\\">\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button aria-label=\\\"Toggle menu\\\">\\r\\n                        <mat-icon>delete</mat-icon>\\r\\n                    </button>                    \\r\\n                </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>\\r\\n        <mat-paginator #paginator\\r\\n                [length]=\\\"dataSource.filteredData.length\\\"\\r\\n                [pageIndex]=\\\"0\\\"\\r\\n                [pageSize]=\\\"5\\\"\\r\\n                [pageSizeOptions]=\\\"[5, 9]\\\">\\r\\n        </mat-paginator>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { UserService } from '../../../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-table',\r\n  templateUrl: './user-table.component.html',\r\n  styleUrls: ['./user-table.component.css']\r\n})\r\nexport class UserTableComponent implements OnInit {\r\n  userdata: any\r\n\r\n  genUsers = []\r\n\r\n  displayedColumns = ['name', 'username', 'action']\r\n  dataSource = new MatTableDataSource();\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.refreshAPIData();\r\n  }\r\n\r\n  ngAfterViewInit() {    \r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  } \r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  refreshAPIData(){\r\n    //Dynamic Data handling\r\n    this.userService.getAllUsers().subscribe(userdata=>{\r\n      console.log('userdata: ',userdata);\r\n      \r\n      userdata.user.forEach(element => {\r\n        if (element.role === 'User') {\r\n          this.genUsers.push(element)\r\n        }        \r\n      })\r\n      console.log('genUsers',this.genUsers);\r\n      this.dataSource.data = this.genUsers\r\n      \r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  afpay works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BooksService } from '../../../services/books.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { NgModule }             from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MyDashboardComponent } from '../my-dashboard/my-dashboard.component';\r\nimport {MatDialogModule, MatDialogRef} from '@angular/material/dialog';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-afpay',\r\n  templateUrl: './afpay.component.html',\r\n  styleUrls: ['./afpay.component.css']\r\n})\r\nexport class AfpayComponent implements OnInit {\r\n\r\n  constructor(\r\n    private _bookService: BooksService,\r\n    private _userService: UserService,\r\n    private ngFlashMessageService: NgFlashMessageService,\r\n    private router: Router\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n      // constructor(private router: Router)\r\n\r\n    var updateBook = {\r\n      available: true\r\n    }\r\n    //borrowBook\r\n    var borrowBook = JSON.parse(localStorage.getItem(\"borrowBook\"))\r\n    //\r\n    // var borbook = JSON.parse(localStorage.getItem(\"borbook\"))\r\n    //current logged in user\r\n    var loggedUserId = JSON.parse(localStorage.getItem(\"user\")).id.toString();\r\n    //title\r\n    this._bookService.borrowBook(localStorage.getItem(\"borbook\"), updateBook).subscribe(data => {\r\n      if (data.success) {\r\n        //book available updated to false\r\n        console.log(localStorage.getItem(\"title\"), 'availability is now false');        \r\n        //Then update the user.borrow\r\n        this._userService.addToBorrows(borrowBook, loggedUserId).subscribe(subData=>{\r\n          if (subData.success) {\r\n            console.log('Added to the borrowed list of user');            \r\n            this.ngFlashMessageService.showFlashMessage({\r\n              messages: [\"You borrowed \" + localStorage.getItem(\"title\")],\r\n              dismissible: true,\r\n              timeout: 4000,\r\n              type: 'info'\r\n            })\r\n          }else {\r\n            this.ngFlashMessageService.showFlashMessage({\r\n              messages: [\"Something went wrong\"],\r\n              dismissible: true,\r\n              timeout: 4000,\r\n              type: 'danger'\r\n            });\r\n          }\r\n        })       \r\n      } else {\r\n        this.ngFlashMessageService.showFlashMessage({\r\n          messages: [\"Something went wrong\"],\r\n          dismissible: true,\r\n          timeout: 4000,\r\n          type: 'danger'\r\n        });\r\n      }\r\n    })  \r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  }\r\n\r\n\r\n","module.exports = \".grid-mobile-container {\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\\r\\n.grid-web-container {\\r\\n  margin-left: 205px;\\r\\n}\\r\\n\\r\\n.dashboard-card {\\r\\n  position: absolute;\\r\\n  top: 15px;\\r\\n  left: 15px;\\r\\n  right: 15px;\\r\\n  bottom: 15px;\\r\\n}\\r\\n\\r\\n.more-button {\\r\\n  position: absolute;\\r\\n  top: 5px;\\r\\n  right: 10px;\\r\\n}\\r\\n\\r\\n.dashboard-card-content {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.example-card {\\r\\n  max-width: 250px;\\r\\n  max-height: 250px;\\r\\n  margin-left: 2.5%;\\r\\n  margin-right: 2.5%;\\r\\n  margin-top: 0.75%;\\r\\n}\\r\\n\\r\\n.book-pagination-controls{\\r\\n  margin-left: 13.5%; \\r\\n  margin-right: 13.5%\\r\\n}\\r\\n\\r\\n.card-pagination-controls{\\r\\n  margin-left: 32.5%; \\r\\n  margin-right: 32.5%;\\r\\n}\"","module.exports = \"<my-nav></my-nav>\\r\\n<div [ngClass]=\\\"{'grid-mobile-container': isMobileDashboard(), 'grid-web-container': !isMobileDashboard()}\\\">\\r\\n  <h1 class=\\\"mat-h1\\\">\\r\\n    <div *ngIf=\\\"cards.length\\\">Your Flagged Books</div>\\r\\n    <div *ngIf=\\\"!cards.length\\\">The list is empty</div>\\r\\n  </h1>\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\r\\n    <!--Cards represent the categories || That is paginated also-->\\r\\n    <mat-grid-tile *ngFor=\\\"let card of cards | paginate: {\\r\\n                                                            id: 'outer-cards',\\r\\n                                                            itemsPerPage: 4,\\r\\n                                                            currentPage: x,\\r\\n                                                            totalItems: cards.length }\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>\\r\\n            {{card.title}}\\r\\n          </mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\r\\n          <!--For Books in card.books display books || Requires pagination for each card-->\\r\\n          <mat-card class=\\\"example-card\\\" *ngFor=\\\"let book of card.books | paginate: {\\r\\n                                                                                      id: card.title, \\r\\n                                                                                      itemsPerPage: 4,\\r\\n                                                                                      currentPage: p[card.title]}\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>{{book.title}}</mat-card-title>\\r\\n              <mat-card-subtitle>{{book.author}}</mat-card-subtitle>\\r\\n            </mat-card-header>\\r\\n            <img mat-card-sm-image src=\\\"{{book.image}}\\\" alt=\\\"Photo of a Shiba Inu\\\" style=\\\"height: auto;\\\">\\r\\n            <mat-card-actions>\\r\\n              <button mat-button (click)=\\\"borrowBook(book)\\\">BORROW</button>\\r\\n              <button mat-button (click)=\\\"unFlagBook(book)\\\">UNFLAG</button>\\r\\n            </mat-card-actions>\\r\\n          </mat-card>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { UserService } from '../../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'bookmarks-dash',\r\n  templateUrl: './bookmarks-dash.component.html',\r\n  styleUrls: ['./bookmarks-dash.component.css']\r\n})\r\nexport class BookmarksDashComponent {\r\n  apiBooks: any;\r\n\r\n  //Categories of books\r\n  EducationBooks = []\r\n  AMBooks = []\r\n  CTBooks = []\r\n  HistoryBooks = []\r\n  BioraphyBooks = []\r\n  BusinessBooks = []\r\n\r\n  cards = [];\r\n\r\n  //Pagination Data\r\n  p: { [id: string]: number } = {};\r\n  x: number = 1;\r\n\r\n  constructor(private _userService: UserService){\r\n    this.getUserBookmarksData();\r\n  }\r\n\r\n\r\n  getUserBookmarksData(){\r\n    //current logged in user\r\n    var loggedUserId = JSON.parse(localStorage.getItem(\"user\")).id.toString();\r\n\r\n    this._userService.getBookData(loggedUserId).subscribe(data=>{\r\n      if (data.success) {\r\n        data.user.bookmarks.forEach(element => {\r\n          //You need to remove the duplicates still though\r\n          //if element.category === 'category' push to '#categorybook'\r\n          if (element.category === \"Education\") {\r\n            this.EducationBooks.push(element)\r\n          } else if (element.category === \"Arts-and-Music\") {\r\n            this.AMBooks.push(element)\r\n          } else if (element.category === \"Computers-and-Tech\") {\r\n            this.CTBooks.push(element)\r\n          } else if (element.category === \"History\") {\r\n            this.HistoryBooks.push(element)\r\n          } else if (element.category === \"Biographies\") {\r\n            this.BioraphyBooks.push(element)\r\n          } else if (element.category === \"Business\") {\r\n            this.BusinessBooks.push(element)\r\n          }\r\n        }),\r\n        this.addBooksToCards()    \r\n      }\r\n      \r\n    })\r\n  }\r\n\r\n  isMobileDashboard() {\r\n    if (innerWidth > 960 || (innerWidth > 600 && innerWidth < 639)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  borrowBook(book){\r\n    console.log('Borrowing :', book);    \r\n  }\r\n\r\n  unFlagBook(book){\r\n    console.log('Unflagging :', book);\r\n\r\n    //code here to unflag\r\n    \r\n  }\r\n\r\n\r\n  addBooksToCards() {\r\n\r\n    if (this.AMBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'Arts & Music', cols: 1, rows: 2, books: this.AMBooks }\r\n      )\r\n    }\r\n\r\n    if (this.CTBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'Computer & Tech', cols: 1, rows: 2, books: this.CTBooks }\r\n      )\r\n    }\r\n\r\n    if (this.EducationBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'Education', cols: 1, rows: 2, books: this.EducationBooks }\r\n      )\r\n    }\r\n\r\n    if (this.HistoryBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'History', cols: 1, rows: 2, books: this.HistoryBooks }\r\n      )\r\n    }\r\n\r\n    if (this.BioraphyBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'Biographies', cols: 1, rows: 2, books: this.BioraphyBooks }\r\n      )\r\n    }\r\n\r\n    if (this.BusinessBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'Business', cols: 1, rows: 2, books: this.BusinessBooks }\r\n      )\r\n    }\r\n\r\n  }\r\n}\r\n","module.exports = \"\\r\\n.grid-mobile-container {\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\\r\\n.grid-web-container {\\r\\n  margin-left: 205px;\\r\\n}\\r\\n\\r\\n.dashboard-card {\\r\\n  position: absolute;\\r\\n  top: 15px;\\r\\n  left: 15px;\\r\\n  right: 15px;\\r\\n  bottom: 15px;\\r\\n}\\r\\n\\r\\n.more-button {\\r\\n  position: absolute;\\r\\n  top: 5px;\\r\\n  right: 10px;\\r\\n}\\r\\n\\r\\n.dashboard-card-content {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.example-card {\\r\\n  max-width: 250px;\\r\\n  max-height: 250px;\\r\\n  margin-left: 2.5%;\\r\\n  margin-right: 2.5%;\\r\\n  margin-top: 0.75%;\\r\\n}\\r\\n\\r\\n.book-pagination-controls{\\r\\n  margin-left: 13.5%; \\r\\n  margin-right: 13.5%\\r\\n}\\r\\n\\r\\n.card-pagination-controls{\\r\\n  margin-left: 32.5%; \\r\\n  margin-right: 32.5%;\\r\\n}\\r\\n\\r\\n.main-div{\\r\\n  height: 100vh;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\"","module.exports = \"<my-nav></my-nav>\\r\\n<div [ngClass]=\\\"{'grid-mobile-container': isMobileDashboard(), 'grid-web-container': !isMobileDashboard()}\\\">\\r\\n  <h1 class=\\\"mat-h1\\\">\\r\\n    <div *ngIf=\\\"cards.length\\\">Reserved Books</div>\\r\\n    <div *ngIf=\\\"!cards.length\\\">You have not reserved any book</div>\\r\\n  </h1>\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\r\\n    <!--Cards represent the categories || That is paginated also-->\\r\\n    <mat-grid-tile *ngFor=\\\"let card of cards | paginate: {\\r\\n                                                            id: 'outer-cards',\\r\\n                                                            itemsPerPage: 4,\\r\\n                                                            currentPage: x,\\r\\n                                                            totalItems: cards.length }\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\r\\n \\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>\\r\\n            {{card.title}}            \\r\\n          </mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\r\\n          <!--For Books in card.books display books || Requires pagination for each card-->\\r\\n          <mat-card class=\\\"example-card\\\" *ngFor=\\\"let book of card.books | paginate: {\\r\\n                                                                                      id: card.title, \\r\\n                                                                                      itemsPerPage: 4,\\r\\n                                                                                      currentPage: p[card.title]}\\\">\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>{{book.title}}</mat-card-title>\\r\\n              <mat-card-subtitle>{{book.author}}</mat-card-subtitle>\\r\\n            </mat-card-header>\\r\\n            <img mat-card-sm-image src= {{book.image}} alt=\\\"Photo of a Shiba Inu\\\" style=\\\"height: auto;\\\">\\r\\n            <mat-card-actions>\\r\\n              <button mat-button (click)=\\\"unBorrowBook(book)\\\">Hand-Over</button>\\r\\n              <button mat-button (click)=\\\"addToBookmarks(book)\\\">BOOKMARK</button>\\r\\n            </mat-card-actions>\\r\\n          </mat-card>\\r\\n        \\r\\n        </mat-card-content>\\r\\n        <div class=\\\"book-pagination-controls\\\">\\r\\n          <!--pagination controls here-->\\r\\n          <pagination-controls [id]='card.title' (pageChange)=\\\"p[card.title] = $event\\\"></pagination-controls>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n  <div class=\\\"card-pagination-controls\\\">\\r\\n    <!--pagination controls of cards-->\\r\\n    <pagination-controls *ngIf=\\\"cards.length\\\" id='outer-cards'(pageChange)=\\\"x = $event\\\"></pagination-controls>\\r\\n  </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { BooksService } from '../../../services/books.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport {DomSanitizer } from '@angular/platform-browser';\r\n\r\nimport { UnBorrowComponent } from './un-borrow/un-borrow.component';\r\n\r\n@Component({\r\n  selector: 'collection-dash',\r\n  templateUrl: './collection-dash.component.html',\r\n  styleUrls: ['./collection-dash.component.css']\r\n})\r\nexport class CollectionDashComponent {\r\n  apiBooks: any;\r\n\r\n  //Categories of books\r\n  EducationBooks = []\r\n  AMBooks = []\r\n  CTBooks = []\r\n  HistoryBooks = []\r\n  BioraphyBooks = []\r\n  BusinessBooks = []\r\n\r\n  cards = [];\r\n\r\n  //Pagination Data\r\n  p: { [id: string]: number } = {};\r\n  x: number = 1;\r\n\r\n  constructor(private _userService: UserService,\r\n              private _bookService: BooksService,\r\n              private _DomSanitizationService: DomSanitizer,\r\n              private dialog?: MatDialog){\r\n    this.getUserBorrowData();\r\n  }\r\n\r\n  \r\n\r\n  getUserBorrowData(){\r\n    //current logged in user\r\n    var loggedUserId = JSON.parse(localStorage.getItem(\"user\")).id.toString();\r\n\r\n    this._userService.getBookData(loggedUserId).subscribe(data=>{\r\n      if (data.success) {                \r\n        data.user.borrows.forEach(element => {\r\n          //if element._id.category === 'category' push to '#categorybook'\r\n          if (element._id.category === \"Education\") {\r\n            this.EducationBooks.push(element._id)\r\n          } else if (element._id.category === \"Arts-and-Music\") {\r\n            this.AMBooks.push(element._id)\r\n          } else if (element._id.category === \"Computers-and-Tech\") {\r\n            this.CTBooks.push(element._id)\r\n          } else if (element._id.category === \"History\") {\r\n            this.HistoryBooks.push(element._id)\r\n          } else if (element._id.category === \"Biographies\") {\r\n            this.BioraphyBooks.push(element._id)\r\n          } else if (element._id.category === \"Business\") {\r\n            this.BusinessBooks.push(element._id)\r\n          }\r\n        }),\r\n        this.addBooksToCards()\r\n      }\r\n      \r\n      \r\n    })\r\n  }\r\n\r\n  isMobileDashboard() {\r\n    if (innerWidth > 960 || (innerWidth > 600 && innerWidth < 639)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  addBooksToCards() {\r\n\r\n    if (this.AMBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'Arts & Music', cols: 1, rows: 2, books: this.AMBooks }\r\n      )\r\n    }\r\n\r\n    if (this.CTBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'Computer & Tech', cols: 1, rows: 2, books: this.CTBooks }\r\n      )\r\n    }\r\n\r\n    if (this.EducationBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'Education', cols: 1, rows: 2, books: this.EducationBooks }\r\n      )\r\n    }\r\n\r\n    if (this.HistoryBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'History', cols: 1, rows: 2, books: this.HistoryBooks }\r\n      )\r\n    }\r\n\r\n    if (this.BioraphyBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'Biographies', cols: 1, rows: 2, books: this.BioraphyBooks }\r\n      )\r\n    }\r\n\r\n    if (this.BusinessBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'Business', cols: 1, rows: 2, books: this.BusinessBooks }\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  unBorrowBook(book){    \r\n    //code here to unborrow\r\n    const dialogRef = this.dialog.open(UnBorrowComponent, {\r\n      data: {unBorrow: book}\r\n    })\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.refreshCardsData();\r\n    })\r\n  }\r\n\r\n  refreshCardsData(){\r\n    //empty all the #category books cards also cards\r\n\r\n    this.cards.length = 0\r\n\r\n    this.EducationBooks.length = 0\r\n    this.AMBooks.length = 0\r\n    this.CTBooks.length = 0\r\n    this.HistoryBooks.length = 0\r\n    this.BioraphyBooks.length = 0\r\n    this.BusinessBooks.length = 0\r\n\r\n    //Then add the data to cards again\r\n    this.getUserBorrowData();\r\n    this.addBooksToCards();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title>Return {{data.unBorrow.title}} ?</h1>\\r\\n\\r\\n<div mat-dialog-actions style=\\\"margin-left: 3%; margin-right: 3%;\\\">\\r\\n  <button mat-button class=\\\"btn btn-success\\\" (click)=\\\"confirmUnBorrow()\\\">Borrow</button>\\r\\n  <button mat-button class=\\\"btn btn-primary\\\" (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { BooksService } from '../../../../services/books.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { UserService } from '../../../../services/user.service';\r\nimport { NotificationsService } from '../../../../services/notifications.service';\r\n\r\n@Component({\r\n  selector: 'app-un-borrow',\r\n  templateUrl: './un-borrow.component.html',\r\n  styleUrls: ['./un-borrow.component.css']\r\n})\r\nexport class UnBorrowComponent implements OnInit {\r\n\r\n  constructor(private dialogRef: MatDialogRef<any>,\r\n              private _notificationService: NotificationsService,              \r\n              private _userService: UserService,\r\n              private ngFlashMessageService: NgFlashMessageService,\r\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  \r\n  ngOnInit() {\r\n  }\r\n\r\n  confirmUnBorrow(){\r\n    //current logged in user\r\n    var loggedUserId = JSON.parse(localStorage.getItem(\"user\")).id.toString();\r\n\r\n    //Get the user data first to send a notification\r\n    this._userService.getUserDatabyId(loggedUserId).subscribe(userdata => {\r\n      if (userdata.success) {\r\n        var username = userdata.user.username\r\n        \r\n        var message = {\r\n          message: username + ' wants to hand-over ' + this.data.unBorrow.title\r\n        }\r\n\r\n        //Send the message to mongocollection\r\n        this._notificationService.sendNotification(message).subscribe(ndata => {\r\n          if (ndata.success) {\r\n            this.dialogRef.close();\r\n            this.ngFlashMessageService.showFlashMessage({          \r\n              messages: [\"Admin has been notified to withdraw book\"],           \r\n              dismissible: true,           \r\n              timeout: 3000,          \r\n              type: 'info'\r\n            });\r\n          } else {\r\n            this.dialogRef.close();\r\n            this.ngFlashMessageService.showFlashMessage({          \r\n              messages: [\"Failed to Notify the Admin\"],           \r\n              dismissible: true,           \r\n              timeout: 3000,          \r\n              type: 'danger'\r\n            });            \r\n          }       \r\n        })\r\n      } \r\n    })\r\n    \r\n    \r\n\r\n    \r\n\r\n  }\r\n  \r\n}\r\n","module.exports = \".alert{\\r\\n    position: relative;\\r\\n    padding: .75rem 1.25rem;\\r\\n    margin-bottom: 1rem;\\r\\n    margin-left: 5rem;\\r\\n    border: 1px solid transparent;\\r\\n    border-radius: .25rem;\\r\\n}\\r\\n\\r\\n.flash-message\\r\\n{   \\r\\n    float: right;    \\r\\n}\\r\\n\\r\\np {\\r\\n    float: right;     \\r\\n}\"","module.exports = \"/*\\r\\n  Login form css\\r\\n*/\\r\\n\\r\\n  \\r\\n.mat-card {    \\r\\n    text-align: -webkit-center;    \\r\\n  }\\r\\n\\r\\n  \\r\\n.demo-toolbar {    \\r\\n    display: flex;    \\r\\n    align-items: center;    \\r\\n    width: 100%;        \\r\\n  }\\r\\n\\r\\n  \\r\\n.demo-form {    \\r\\n    min-width: 150px;    \\r\\n    max-width: 500px;    \\r\\n    width: 100%;    \\r\\n  }\\r\\n\\r\\n  \\r\\n.demo-full-width {    \\r\\n    width: 100%;    \\r\\n  }\\r\\n\\r\\n  \\r\\nbody {    \\r\\n    margin: 0;    \\r\\n    font-family: Roboto, sans-serif;      \\r\\n  }\\r\\n\\r\\n  \\r\\nmatInput {\\r\\n    font-size: 30px;\\r\\n  }\\r\\n\\r\\n  \\r\\nmat-card {    \\r\\n    max-width: 80%;    \\r\\n    margin: 2em auto;    \\r\\n    text-align: center;\\r\\n    font-size: 30px;    \\r\\n  }\\r\\n\\r\\n  \\r\\nmat-toolbar-row {    \\r\\n    justify-content: space-between;    \\r\\n  }\\r\\n\\r\\n  \\r\\n.done {    \\r\\n    position: fixed;    \\r\\n    bottom: 20px;    \\r\\n    right: 20px;    \\r\\n    color: white;    \\r\\n  }\\r\\n\\r\\n  \\r\\n.content-center {    \\r\\n    text-align: -webkit-center;         \\r\\n  } \\r\\n  \\r\\n  \"","module.exports = \"<!-- Main Toolbar of an App -->    \\r\\n<mat-toolbar color=\\\"primary\\\">    \\r\\n  <span>TCET Bookshelf</span>    \\r\\n  <span class=\\\"demo-toolbar\\\"></span>    \\r\\n  <button mat-button routerLink=\\\"/\\\">Home</button> \\r\\n  <button mat-button routerLink=\\\"/admin-login\\\">Admin</button>   \\r\\n  \\r\\n</mat-toolbar>    \\r\\n \\r\\n<mat-card>    \\r\\n  <!-- Title of an Card -->    \\r\\n  <mat-card-title>    \\r\\n      Login as a user\\r\\n  </mat-card-title>    \\r\\n  \\r\\n  <mat-card-content>    \\r\\n      <form (submit)=\\\"loginUser()\\\">    \\r\\n          <table>    \\r\\n              <tr>    \\r\\n                  <td colspan=\\\"2\\\">    \\r\\n                      <mat-form-field class=\\\"demo-full-width\\\">    \\r\\n                          <input matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">    \\r\\n                      </mat-form-field>    \\r\\n                  </td>                      \\r\\n              </tr>    \\r\\n              <tr>    \\r\\n                <td colspan=\\\"2\\\">    \\r\\n                  <mat-form-field class=\\\"demo-full-width\\\">    \\r\\n                      <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">    \\r\\n                  </mat-form-field>    \\r\\n              </td>        \\r\\n              </tr>    \\r\\n                \\r\\n              <tr>    \\r\\n                  <td colspan=\\\"2\\\">    \\r\\n  \\r\\n                  </td>    \\r\\n              </tr>    \\r\\n              <tr>    \\r\\n                  <td colspan=\\\"2\\\" class=\\\"content-center\\\">    \\r\\n                      <button mat-raised-button color=\\\"primary\\\" style=\\\"margin: 8%\\\" type=\\\"submit\\\">Submit</button>                          \\r\\n                  </td>    \\r\\n              </tr>    \\r\\n          </table>    \\r\\n      </form>    \\r\\n\\r\\n      <h6>Don't have an account ? <a routerLink=\\\"/register\\\">Register</a></h6>\\r\\n  </mat-card-content>    \\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\nimport './flash.css';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: String\r\n  password: String\r\n\r\n  constructor(private authService: AuthService,\r\n    private router: Router,    \r\n    private ngFlashMessageService: NgFlashMessageService) { }\r\n\r\n  ngOnInit() {  \r\n    if (this.authService.isLoggedIn()) {\r\n      this.router.navigate(['/']);\r\n    }      \r\n  }\r\n\r\n  loginUser(){      \r\n    const user = {\r\n      username: this.username,\r\n      password: this.password\r\n    }\r\n    console.log('trying to authenticate with api');\r\n    console.log(user);\r\n    this.authService.authenticateUser(user).subscribe(data => {\r\n      if (data.success && data.user.role === \"User\" ) {\r\n        this.authService.storeUserData(data.token, data.user);        \r\n        this.ngFlashMessageService.showFlashMessage({          \r\n          messages: [\"You have succefully logged in\"],         \r\n          dismissible: true,           \r\n          timeout: 4000,          \r\n          type: 'info'\r\n        }); \r\n        this.router.navigate(['/']);        \r\n      }else {\r\n        this.ngFlashMessageService.showFlashMessage({          \r\n          messages: [data.msg],           \r\n          dismissible: true,           \r\n          timeout: 4000,          \r\n          type: 'danger'\r\n        });\r\n        this.router.navigate(['/login']);\r\n        this.username = null\r\n        this.password = null\r\n      }\r\n    })\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title>Borrow {{data.borBook.title}} ?</h1>\\r\\n\\r\\n<div mat-dialog-actions style=\\\"margin-left: 3%; margin-right: 3%;\\\">\\r\\n  <button mat-button class=\\\"btn btn-success\\\" (click)=\\\"confirmBorrow()\\\">Buy</button>\\r\\n  <button mat-button class=\\\"btn btn-primary\\\" (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { BooksService } from '../../../../services/books.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { UserService } from '../../../../services/user.service';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-conf-borr',\r\n  templateUrl: './conf-borr.component.html',\r\n  styleUrls: ['./conf-borr.component.css']\r\n})\r\nexport class ConfBorrComponent implements OnInit {\r\n\r\n  constructor(private dialogRef: MatDialogRef<any>,\r\n              private _bookService: BooksService,\r\n              private _userService: UserService,\r\n              private ngFlashMessageService: NgFlashMessageService,\r\n              @Inject(DOCUMENT) private document: Document,\r\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  confirmBorrow(){\r\n    //code here to borrow the book\r\n    //patch availability to false\r\n    var updateBook = {\r\n      available: true\r\n    }\r\n    var borrowBook = {\r\n      bookId: this.data.borBook._id\r\n    }\r\n\r\n    console.log(\"YES I AM CALLED\");\r\n   \r\n\r\n    //current logged in user\r\n    var loggedUserId = JSON.parse(localStorage.getItem(\"user\")).id.toString();\r\n    //update book available as false\r\n    \r\n    localStorage.setItem('updateBook',  JSON.stringify(updateBook));\r\n    localStorage.setItem('borbook',  this.data.borBook._id);\r\n    localStorage.setItem('borrowBook',  JSON.stringify(borrowBook));\r\n    localStorage.setItem('title', this.data.borBook.title);\r\n    return this.document.location.href = 'http://localhost:3000/paytm';\r\n    // this._bookService.buybook();\r\n\r\n    // this._bookService.borrowBook(this.data.borBook._id, updateBook).subscribe(data => {\r\n    //   if (data.success) {\r\n    //     //book available updated to false\r\n    //     console.log(this.data.borBook.title, 'availability is now false');        \r\n    //     //Then update the user.borrow\r\n    //     this._userService.addToBorrows(borrowBook, loggedUserId).subscribe(subData=>{\r\n    //       if (subData.success) {\r\n    //         console.log('Added to the borrowed list of user');            \r\n    //         this.dialogRef.close();\r\n    //         this.ngFlashMessageService.showFlashMessage({\r\n    //           messages: [\"You borrowed \" + this.data.borBook.title],\r\n    //           dismissible: true,\r\n    //           timeout: 4000,\r\n    //           type: 'info'\r\n    //         })\r\n    //       }else {\r\n    //         this.ngFlashMessageService.showFlashMessage({\r\n    //           messages: [\"Something went wrong\"],\r\n    //           dismissible: true,\r\n    //           timeout: 4000,\r\n    //           type: 'danger'\r\n    //         });\r\n    //       }\r\n    //     })       \r\n    //   } else {\r\n    //     this.ngFlashMessageService.showFlashMessage({\r\n    //       messages: [\"Something went wrong\"],\r\n    //       dismissible: true,\r\n    //       timeout: 4000,\r\n    //       type: 'danger'\r\n    //     });\r\n    //   }\r\n    // })  \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","module.exports = \".grid-mobile-container {\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\\r\\n.grid-web-container {\\r\\n  margin-left: 205px;\\r\\n}\\r\\n\\r\\n.dashboard-card {\\r\\n  position: absolute;\\r\\n  top: 15px;\\r\\n  left: 15px;\\r\\n  right: 15px;\\r\\n  bottom: 15px;  \\r\\n}\\r\\n\\r\\n.more-button {\\r\\n  position: absolute;\\r\\n  top: 5px;\\r\\n  right: 10px;\\r\\n}\\r\\n\\r\\n.dashboard-card-content {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.example-card {\\r\\n  max-width: 250px;\\r\\n  max-height: 250px;\\r\\n  margin-left: 2.5%;\\r\\n  margin-right: 2.5%;\\r\\n  margin-top: 0.75%;\\r\\n}\\r\\n\\r\\n.example-header-image {\\r\\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n.book-pagination-controls{\\r\\n  margin-left: 13.5%; \\r\\n  margin-right: 13.5%\\r\\n}\\r\\n\\r\\n.card-pagination-controls{\\r\\n  margin-left: 32.5%; \\r\\n  margin-right: 32.5%;\\r\\n}\\r\\n\\r\\n.main-div{\\r\\n  height: 100vh;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<my-nav></my-nav>\\r\\n<div [ngClass]=\\\"{'grid-mobile-container': isMobileDashboard(), 'grid-web-container': !isMobileDashboard()}\\\">\\r\\n  <h1 class=\\\"mat-h1\\\"><div *ngIf=\\\"cards.length\\\">Available books</div>\\r\\n      <div *ngIf=\\\"!cards.length\\\">Oops it seems that all books have been borrowed</div>\\r\\n  </h1>\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\r\\n    \\r\\n    <!--Cards represent the categories || That is paginated also-->\\r\\n    <mat-grid-tile *ngFor=\\\"let card of cards | paginate: {\\r\\n                                                           id: 'outer-cards',\\r\\n                                                           itemsPerPage: 4,\\r\\n                                                           currentPage: x,\\r\\n                                                           totalItems: cards.length\\r\\n    }\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\r\\n    <div class = \\\"mat-card-cvr\\\">\\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>\\r\\n            {{card.title}}\\r\\n          </mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\r\\n          <div class=\\\"row\\\">             \\r\\n            <!--For Books in card.books display books || Requires pagination for each card-->\\r\\n            <mat-card class=\\\"example-card\\\" *ngFor=\\\"let book of card.books | paginate: {\\r\\n                                                                                        id: card.title, \\r\\n                                                                                        itemsPerPage: 4,\\r\\n                                                                                        currentPage: p[card.title]\\r\\n            }\\\">\\r\\n              <mat-card-header>                \\r\\n                <mat-card-title>{{book.title}}</mat-card-title>\\r\\n                <mat-card-subtitle>{{book.author}}</mat-card-subtitle>                \\r\\n              </mat-card-header>\\r\\n              <img mat-card-sm-image [src]= \\\"sanitizeImageUrl(book.image)\\\" alt=\\\"Book Cover\\\" style=\\\"height: auto;\\\">              \\r\\n              <!-- <img mat-card-sm-image [src]=\\\"sanitizeImageUrl(book.image)\\\" /> -->\\r\\n              <mat-card-actions>\\r\\n                <button mat-button (click)=\\\"borrowBook(book)\\\">Buy</button>\\r\\n                <button mat-button (click)=\\\"addToBookmarks(book)\\\">Bookmark</button>                \\r\\n              </mat-card-actions>\\r\\n            </mat-card>  \\r\\n                               \\r\\n          </div>          \\r\\n        </mat-card-content>\\r\\n        <div class=\\\"book-pagination-controls\\\">\\r\\n          <!--pagination controls here-->\\r\\n          <pagination-controls [id]='card.title' (pageChange)=\\\"p[card.title] = $event\\\"></pagination-controls>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n    </div>       \\r\\n    </mat-grid-tile>        \\r\\n  </mat-grid-list>\\r\\n\\r\\n\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"card-pagination-controls\\\">\\r\\n      <!--pagination controls of cards-->\\r\\n      <pagination-controls *ngIf=\\\"cards.length\\\" id='outer-cards'(pageChange)=\\\"x = $event\\\"></pagination-controls>\\r\\n  </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { BooksService } from '../../../services/books.service';\r\nimport { Book } from '../../../models/Book';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ConfBorrComponent } from './conf-borr/conf-borr.component';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'my-dashboard',\r\n  templateUrl: './my-dashboard.component.html',\r\n  styleUrls: ['./my-dashboard.component.css']\r\n})\r\nexport class MyDashboardComponent {\r\n  innerWidth: number\r\n  apiBooks: any;\r\n\r\n  //Categories of books\r\n  EducationBooks = []\r\n  AMBooks = []\r\n  CTBooks = []\r\n  HistoryBooks = []\r\n  BioraphyBooks = []\r\n  BusinessBooks = []\r\n\r\n  cards = [];\r\n\r\n  //Pagination Data\r\n  p: { [id: string]: number } = {};\r\n  x: number = 1;\r\n\r\n  constructor(private _bookService: BooksService,\r\n              private _userSevice: UserService,\r\n              private ngFlashMessageService: NgFlashMessageService,\r\n              private sanitizer: DomSanitizer,\r\n              private dialog?: MatDialog) {\r\n              \r\n                //get book data when page starts\r\n              this.getBooks();\r\n              console.log('cards: ', this.cards);\r\n  }\r\n\r\n  // constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  public sanitizeImageUrl(img: string): SafeUrl {\r\n      return this.sanitizer.bypassSecurityTrustUrl(img);\r\n  }\r\n\r\n  \r\n  isMobileDashboard() {\r\n    if (innerWidth > 960 || (innerWidth > 600 && innerWidth < 639)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getBooks() {\r\n\r\n    this._bookService.getBooks().subscribe((dataBooks: Book[]) => {\r\n      this.apiBooks = dataBooks,\r\n      console.log('APIBooks:',this.apiBooks)\r\n      \r\n        dataBooks.forEach(element => {\r\n          console.log('databook elements: ', element.title, \",\", element.category);\r\n          \r\n          //if element.category === 'category' && element.available push to '#categorybook'\r\n          //then from each #categorybook create objects and push to cards\r\n\r\n          if (element.category === \"Education\") {\r\n            this.EducationBooks.push(element)\r\n            console.log('In education add');\r\n          } else if (element.category === \"Arts-and-Music\" && element.available) {\r\n            this.AMBooks.push(element)\r\n          } else if (element.category === \"Computers-and-Tech\" && element.available) {\r\n            this.CTBooks.push(element)\r\n          } else if (element.category === \"History\" && element.available) {\r\n            this.HistoryBooks.push(element)\r\n          } else if (element.category === \"Biographies\" && element.available) {\r\n            this.BioraphyBooks.push(element)\r\n          } else if (element.category === \"Business\" && element.available) {\r\n            this.BusinessBooks.push(element)\r\n          }\r\n        }),\r\n        this.addBooksToCards()\r\n\r\n    })\r\n  }\r\n\r\n  addToBookmarks(book) {\r\n    //current logged in user\r\n    var loggedUserId = JSON.parse(localStorage.getItem(\"user\")).id.toString();\r\n\r\n    const bmBook = {\r\n      bookId: book._id\r\n    }\r\n    console.log('adding bookid', bmBook, 'to user of id', loggedUserId);\r\n    //Adding to Bookmarks of user\r\n    this._userSevice.addToBookmark(bmBook, loggedUserId).subscribe(data => {\r\n      console.log('On adding to Bookmark', data);\r\n    })\r\n    this.ngFlashMessageService.showFlashMessage({\r\n      messages: [book.title + \" was added to your bookmarks\"],\r\n      dismissible: true,\r\n      timeout: 4000,\r\n      type: 'info'\r\n    });\r\n\r\n  }\r\n\r\n  addBooksToCards() {\r\n\r\n    if (this.AMBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'Arts & Music', cols: 1, rows: 2, books: this.AMBooks }\r\n      )\r\n    }\r\n\r\n    if (this.CTBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'Computer & Tech', cols: 1, rows: 2, books: this.CTBooks }\r\n      )\r\n    }\r\n\r\n    if (this.EducationBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'Education', cols: 1, rows: 2, books: this.EducationBooks }\r\n      )\r\n    }\r\n\r\n    if (this.HistoryBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'History', cols: 1, rows: 2, books: this.HistoryBooks }\r\n      )\r\n    }\r\n\r\n    if (this.BioraphyBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'Biographies', cols: 1, rows: 2, books: this.BioraphyBooks }\r\n      )\r\n    }\r\n\r\n    if (this.BusinessBooks.length > 0) {\r\n      this.cards.push(\r\n        { title: 'Business', cols: 1, rows: 2, books: this.BusinessBooks }\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  borrowBook(book) {    \r\n    const dialogRef = this.dialog.open(ConfBorrComponent, {\r\n      data: {borBook: book},\r\n      width: '350px'\r\n    })\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.refreshCardsData();\r\n    })       \r\n  }\r\n\r\n  refreshCardsData() {\r\n\r\n    //empty all the #category books cards also cards\r\n\r\n    this.cards.length = 0\r\n\r\n    this.EducationBooks.length = 0\r\n    this.AMBooks.length = 0\r\n    this.CTBooks.length = 0\r\n    this.HistoryBooks.length = 0\r\n    this.BioraphyBooks.length = 0\r\n    this.BusinessBooks.length = 0\r\n\r\n    //Then add to cards \r\n    this.getBooks();\r\n    this.addBooksToCards();\r\n  }\r\n\r\n}\r\n","module.exports = \".sidenav-container {\\r\\n  height: 100%;  \\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n  width: 200px;\\r\\n  box-shadow: 3px 0 6px rgba(0,0,0,.24);\\r\\n  color:#97b3ce;\\r\\n  background-color:#1f2637;\\r\\n}\\r\\n\\r\\n.center-toolbar {    \\r\\n  display: flex;    \\r\\n  align-items: center;    \\r\\n  width: 100%;        \\r\\n}\\r\\n\\r\\n.side-nav-items {\\r\\n  text-decoration:none;        \\r\\n  color:#97b3ce;\\r\\n  transition:all .2s ease-in-out\\r\\n}\\r\\n\\r\\n.side-nav-active-item{\\r\\n  background-color:#009bfc;\\r\\n  text-decoration:none;        \\r\\n  color:#97b3ce;\\r\\n  transition:all .2s ease-in-out\\r\\n}\\r\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n  <mat-sidenav\\r\\n    #drawer\\r\\n    class=\\\"sidenav\\\"\\r\\n    fixedInViewport=\\\"true\\\"\\r\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\r\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\r\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\r\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\r\\n    <mat-nav-list>\\r\\n      <a mat-list-item (click)=\\\"switchToBrowseBooks()\\\" \\r\\n      [ngClass]=\\\"{'side-nav-active-item': (apptitle === 'Browse Books'),\\r\\n                  'side-nav-items': !(apptitle === 'Browse Books')}\\\"><i class=\\\"fa fa-book\\\" aria-hidden=\\\"true\\\"></i>&nbsp; Browse Books</a>\\r\\n      <a mat-list-item (click)=\\\"switchToMyCollections()\\\" \\r\\n      [ngClass]=\\\"{'side-nav-active-item': (apptitle === 'My Collections'),\\r\\n                  'side-nav-items': !(apptitle === 'My Collections')}\\\"><i class=\\\"fa fa-database\\\" aria-hidden=\\\"true\\\"></i>&nbsp; My Collection</a>\\r\\n      <a mat-list-item (click)=\\\"switchToBookMarks()\\\" \\r\\n      [ngClass]=\\\"{'side-nav-active-item': (apptitle === 'Flagged Books'),\\r\\n                  'side-nav-items': !(apptitle === 'Flagged Books')}\\\"><i class=\\\"fa fa-flag\\\" aria-hidden=\\\"true\\\"></i>&nbsp; Bookmarks</a>\\r\\n      <a mat-list-item (click)=\\\"switchToSuggestBook()\\\" \\r\\n      [ngClass]=\\\"{'side-nav-active-item': (apptitle === 'Suggest A Book'),\\r\\n                  'side-nav-items': !(apptitle === 'Suggest A Book')}\\\"><i class=\\\"fa fa-exclamation-circle\\\" aria-hidden=\\\"true\\\"></i>&nbsp; Suggest A Book</a>\\r\\n      <!-- <a mat-list-item (click)=\\\"switchToNewReleases()\\\" \\r\\n      [ngClass]=\\\"{'side-nav-active-item': (apptitle === 'New Releases'),\\r\\n                  'side-nav-items': !(apptitle === 'New Releases')}\\\"><i class=\\\"fa fa-hourglass-2\\\" aria-hidden=\\\"true\\\"></i>&nbsp; New Releases</a> -->\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content>\\r\\n    <mat-toolbar color=\\\"primary\\\">\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        aria-label=\\\"Toggle sidenav\\\"\\r\\n        mat-icon-button\\r\\n        (click)=\\\"drawer.toggle()\\\"\\r\\n        *ngIf=\\\"isHandset$ | async\\\">\\r\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\r\\n      </button>\\r\\n      <span>{{ apptitle }}</span>\\r\\n      <span class=\\\"center-toolbar\\\"></span>\\r\\n      <button *ngIf=\\\"authService.isLoggedIn()\\\" mat-button routerLink=\\\"/\\\">Dashboard</button>   \\r\\n      <button *ngIf=\\\"authService.isLoggedIn()\\\" mat-button routerLink=\\\"/profile\\\">Profile</button>         \\r\\n      <button *ngIf=\\\"!authService.isLoggedIn()\\\" mat-button routerLink=\\\"/register\\\">Register</button>  \\r\\n      <button *ngIf=\\\"!authService.isLoggedIn()\\\" mat-button routerLink=\\\"/login\\\">Login</button>  \\r\\n      <button *ngIf=\\\"authService.isLoggedIn()\\\" mat-button (click)=\\\"onLogoutClick()\\\">Logout</button>  \\r\\n    </mat-toolbar>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AuthService } from '../../../services/auth.service';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n@Component({\r\n  selector: 'my-nav',\r\n  templateUrl: './my-nav.component.html',\r\n  styleUrls: ['./my-nav.component.css']\r\n})\r\nexport class MyNavComponent {\r\n  apptitle: String = 'Browse Books';\r\n  \r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches)\r\n    );\r\n    \r\n  constructor(private breakpointObserver: BreakpointObserver,\r\n              private authService: AuthService,\r\n              private flashMessage: FlashMessagesService,\r\n              private router: Router) {\r\n\r\n                console.log('isLoggedIn: ', this.authService.isLoggedIn());\r\n                if (this.router.url === '/') {\r\n                  this.apptitle = 'Browse Books';\r\n                }else if(this.router.url === '/collection'){\r\n                  this.apptitle = 'My Collections';\r\n                }else if(this.router.url === '/bookmarks'){\r\n                  this.apptitle = 'Flagged Books';\r\n                }else if(this.router.url === '/dues'){\r\n                  this.apptitle = 'My Dues';\r\n                }else if(this.router.url === '/suggest-book'){\r\n                  this.apptitle = 'Suggest A Book';\r\n                }\r\n              }\r\n  \r\n\r\n  onLogoutClick(){\r\n    console.log('You clicked Logout');\r\n    this.authService.logout();\r\n    this.flashMessage.show('You have logged out', {cssClass: 'alert-success', timeout: 3000});\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n  switchToBrowseBooks(){\r\n    this.apptitle = 'Browse Books';\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  switchToMyCollections(){\r\n    this.apptitle = 'My Collections';\r\n    this.router.navigate(['/collection']);    \r\n  }\r\n\r\n  switchToBookMarks(){\r\n    this.apptitle = 'Flagged Books';\r\n    this.router.navigate(['/bookmarks']);\r\n  }\r\n  \r\n  switchToMyDues(){\r\n    this.apptitle = 'My Dues';\r\n    this.router.navigate(['/dues']);\r\n  }\r\n  \r\n  switchToSuggestBook(){\r\n    this.apptitle = 'Suggest A Book';\r\n    this.router.navigate(['/suggest-book']);\r\n  }\r\n  \r\n  switchToNewReleases(){\r\n    this.apptitle = 'New Releases';\r\n    console.log('You are in', this.apptitle);\r\n  }\r\n  \r\n  }\r\n","module.exports = \".demo-toolbar {    \\r\\n    display: flex;    \\r\\n    align-items: center;    \\r\\n    width: 100%;        \\r\\n}  \\r\\n\\r\\n.mat-card {    \\r\\n    text-align: -webkit-center;    \\r\\n}  \\r\\n\\r\\nmat-card {    \\r\\n    max-width: 80%;    \\r\\n    margin: 2em auto;    \\r\\n    text-align: center;\\r\\n    font-size: 30px;    \\r\\n  } \"","module.exports = \"<!-- Main Toolbar of an App -->    \\r\\n<mat-toolbar color=\\\"primary\\\">    \\r\\n  <span>UCSC E-Library System</span>    \\r\\n  <span class=\\\"demo-toolbar\\\"></span>    \\r\\n  <button mat-button routerLink=\\\"/\\\">Home</button>    \\r\\n  \\r\\n</mat-toolbar>  \\r\\n\\r\\n<mat-card *ngIf=\\\"user\\\">\\r\\n  <mat-card-title>\\r\\n    {{user.name}}\\r\\n  </mat-card-title>\\r\\n  \\r\\n  <mat-card-content>\\r\\n    <table>\\r\\n      <tr>\\r\\n        <p>Username : {{user.username}}</p>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <p>Email : {{user.email}}</p>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  user: any\r\n\r\n  constructor(private authService: AuthService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.user = profile.user;\r\n      console.log(this.user);      \r\n    },\r\n    err => {\r\n      console.log(err);\r\n      return false;      \r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"/*\\r\\n  Reactive form css\\r\\n*/\\r\\n\\r\\n  \\r\\n.mat-card {    \\r\\n  text-align: -webkit-center;    \\r\\n}\\r\\n\\r\\n  \\r\\n.demo-toolbar {    \\r\\n  display: flex;    \\r\\n  align-items: center;    \\r\\n  width: 100%;        \\r\\n}\\r\\n\\r\\n  \\r\\n.demo-form {    \\r\\n  min-width: 150px;    \\r\\n  max-width: 500px;    \\r\\n  width: 100%;    \\r\\n}\\r\\n\\r\\n  \\r\\n.demo-full-width {    \\r\\n  width: 100%;    \\r\\n}\\r\\n\\r\\n  \\r\\nbody {    \\r\\n  margin: 0;    \\r\\n  font-family: Roboto, sans-serif;      \\r\\n}\\r\\n\\r\\n  \\r\\nmatInput {\\r\\n  font-size: 30px;\\r\\n}\\r\\n\\r\\n  \\r\\nmat-card {    \\r\\n  max-width: 80%;    \\r\\n  margin: 2em auto;    \\r\\n  text-align: center;\\r\\n  font-size: 30px;    \\r\\n}\\r\\n\\r\\n  \\r\\nmat-toolbar-row {    \\r\\n  justify-content: space-between;    \\r\\n}\\r\\n\\r\\n  \\r\\n.done {    \\r\\n  position: fixed;    \\r\\n  bottom: 20px;    \\r\\n  right: 20px;    \\r\\n  color: white;    \\r\\n}\\r\\n\\r\\n  \\r\\n.content-center {    \\r\\n  text-align: -webkit-center;    \\r\\n} \\r\\n\\r\\n\"","module.exports = \"<!-- Main Toolbar of an App -->  \\r\\n<mat-toolbar color=\\\"primary\\\">  \\r\\n  <span>UCSC E Libray System</span>  \\r\\n  <span class=\\\"demo-toolbar\\\"></span>  \\r\\n  <button mat-button routerLink=\\\"/\\\">Home</button>  \\r\\n\\r\\n</mat-toolbar>  \\r\\n\\r\\n<!-- Card container that binds all togather -->  \\r\\n<mat-card>  \\r\\n  <!-- Title of an Card -->  \\r\\n  <mat-card-title>  \\r\\n      Register as a user  \\r\\n  </mat-card-title>  \\r\\n\\r\\n  <!-- Actual content starts from here -->  \\r\\n  <mat-card-content>  \\r\\n      <form [formGroup]=\\\"regiForm\\\" (ngSubmit)=\\\"onFormSubmit(regiForm.value)\\\">  \\r\\n          <table>  \\r\\n              <tr>  \\r\\n                  <td>  \\r\\n                      <mat-form-field class=\\\"demo-full-width\\\">  \\r\\n                          <input formControlName=\\\"name\\\" matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"name\\\">  \\r\\n                      </mat-form-field>  \\r\\n                      <mat-error>  \\r\\n                          <span *ngIf=\\\"!regiForm.get('name').valid && regiForm.get('name').touched\\\">Please enter First Name !!!</span>  \\r\\n                      </mat-error>  \\r\\n                  </td>  \\r\\n                  <td>  \\r\\n                      <mat-form-field class=\\\"demo-full-width\\\">  \\r\\n                          <input formControlName=\\\"username\\\" matInput placeholder=\\\"Username\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\">  \\r\\n                      </mat-form-field>  \\r\\n                      <mat-error>  \\r\\n                          <span *ngIf=\\\"!regiForm.get('username').valid && regiForm.get('username').touched\\\">Please enter username!!!</span>  \\r\\n                      </mat-error>  \\r\\n                  </td>  \\r\\n              </tr>                  \\r\\n                            \\r\\n              <tr>  \\r\\n                  <td colspan=\\\"2\\\">  \\r\\n                      <mat-form-field class=\\\"demo-full-width\\\">  \\r\\n                          <input formControlName=\\\"email\\\" matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\">  \\r\\n                          <mat-hint>use like : demo@demo.com</mat-hint>  \\r\\n                          <mat-error>  \\r\\n                              <span *ngIf=\\\"!regiForm.get('email').valid && regiForm.get('email').touched\\\">Enter proper Email !!!</span>  \\r\\n                          </mat-error>  \\r\\n                      </mat-form-field>  \\r\\n                  </td>  \\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td colspan=\\\"1\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input formControlName=\\\"password\\\" matInput placeholder=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\">                    \\r\\n                  </mat-form-field>\\r\\n                  <mat-error>  \\r\\n                    <span *ngIf=\\\"!regiForm.get('password').valid && regiForm.get('password').touched\\\">Please enter a password</span>  \\r\\n                </mat-error> \\r\\n                </td>\\r\\n              </tr>  \\r\\n              <tr>  \\r\\n                  <td colspan=\\\"2\\\">  \\r\\n                      <mat-slide-toggle formControlName=\\\"IsAccepted\\\" (change)=\\\"onChange($event)\\\">Accept Terms & Conditions</mat-slide-toggle>  \\r\\n                  </td>  \\r\\n              </tr>  \\r\\n              <tr>  \\r\\n                  <td colspan=\\\"2\\\" class=\\\"content-center\\\">  \\r\\n                      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!regiForm.valid || IsAccepted==0\\\">Submit</button>  \\r\\n                  </td>  \\r\\n              </tr>  \\r\\n              <tr>  \\r\\n                  <td></td>  \\r\\n              </tr>  \\r\\n          </table>  \\r\\n      </form>  \\r\\n  </mat-card-content>  \\r\\n</mat-card>  \"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ValidateService } from '../../../services/validate.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\n// Must import to use Forms functionality  \r\nimport { FormBuilder, FormGroup, Validators ,FormsModule,NgForm } from '@angular/forms'; \r\n\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  regiForm: FormGroup;  \r\n  name:string='';    \r\n  username:string='';\r\n  email:string='';\r\n  password:string='';\r\n  IsAccepted:number=0;\r\n\r\n  constructor(        \r\n    private authService: AuthService,\r\n    private flashMessage: FlashMessagesService,\r\n    private router: Router,\r\n    private fb: FormBuilder) {\r\n\r\n      // To initialize FormGroup  \r\n    this.regiForm = fb.group({  \r\n      'name' : [null, Validators.required],  \r\n      'username' : [null, Validators.required],              \r\n      'email':[null, Validators.compose([Validators.required,Validators.email])],  \r\n      'password': [null, Validators.required],\r\n      'IsAccepted':[null]  \r\n    }); \r\n\r\n     }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // On Change event of Toggle Button  \r\n  onChange(event:any)  \r\n  {  \r\n    if (event.checked == true) {  \r\n      this.IsAccepted = 1;  \r\n    } else {  \r\n      this.IsAccepted = 0;  \r\n    }  \r\n  } \r\n\r\n\r\n  // Executed When Form Is Submitted  \r\n  onFormSubmit(form:NgForm)  \r\n  {  \r\n    const user = {\r\n      name: this.name,\r\n      username: this.username,\r\n      email: this.email,\r\n      password: this.password\r\n    }\r\n\r\n    console.log(user);\r\n    \r\n    //Register User\r\n    this.authService.registerUser(user).subscribe(data=>{\r\n      if (data.success) {\r\n        console.log('login success', data);                \r\n        this.flashMessage.show('You are now registered and can log in', {cssClass: 'alert-success', timeout: 4000});\r\n        this.router.navigate(['/login']);\r\n      }else{\r\n        console.log('login failed' ,data);        \r\n        \r\n        this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\r\n        this.router.navigate(['/']);\r\n      }\r\n    })\r\n    \r\n  } \r\n}\r\n","module.exports = \".grid-mobile-container {\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\\r\\n.grid-web-container {\\r\\n  margin-left: 205px;\\r\\n}\\r\\n\\r\\n.dashboard-card {\\r\\n  position: absolute;\\r\\n  top: 15px;\\r\\n  left: 15px;\\r\\n  right: 15px;\\r\\n  bottom: 15px;\\r\\n}\\r\\n\\r\\n.more-button {\\r\\n  position: absolute;\\r\\n  top: 5px;\\r\\n  right: 10px;\\r\\n}\\r\\n\\r\\n.dashboard-card-content {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-container > * {\\r\\n  width: 100%;\\r\\n}\"","module.exports = \"<my-nav></my-nav>\\r\\n<div [ngClass]=\\\"{'grid-mobile-container': isMobileDashboard(), 'grid-web-container': !isMobileDashboard()}\\\">\\r\\n  <h1 class=\\\"mat-h1\\\">Suggest A Book</h1>\\r\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\r\\n    <mat-grid-tile colspan=2>\\r\\n      <mat-card class=\\\"dashboard-card\\\">\\r\\n        <form [formGroup]=\\\"_suggestForm\\\" (submit)=\\\"onSubmit()\\\">\\r\\n          <div class=\\\"example-container\\\">            \\r\\n              <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Title\\\" formControlName=\\\"Title\\\">\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field>\\r\\n                  <input matInput placeholder=\\\"Author\\\" formControlName=\\\"Author\\\">\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Category\\\" formControlName=\\\"Category\\\">\\r\\n                  <mat-option value=\\\"Arts-and-Music\\\">Arts & Music</mat-option>\\r\\n                  <mat-option value=\\\"Biographies\\\">Biographies</mat-option>\\r\\n                  <mat-option value=\\\"Business\\\">Business</mat-option>\\r\\n                  <mat-option value=\\\"Computers-and-Tech\\\">Computers & Tech</mat-option>\\r\\n                  <mat-option value=\\\"Education\\\">Educational</mat-option>\\r\\n                  <mat-option value=\\\"History\\\">History</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">suggest</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-card>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { FormGroup } from '@angular/forms/src/model';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { NotificationsService } from '../../../services/notifications.service';\r\n\r\n@Component({\r\n  selector: 'suggest-book',\r\n  templateUrl: './suggest-book.component.html',\r\n  styleUrls: ['./suggest-book.component.css']\r\n})\r\nexport class SuggestBookComponent implements OnInit {\r\n\r\n  public _suggestForm: FormGroup\r\n  \r\n  constructor(private _formBuilder: FormBuilder,\r\n              private _userService: UserService,\r\n              private _notificationService: NotificationsService,\r\n              private ngFlashMessageService: NgFlashMessageService){}\r\n\r\n  ngOnInit(){\r\n    this._suggestForm = this._formBuilder.group({\r\n      Title: ['', [Validators.required]],\r\n      Author: ['', [Validators.required]],\r\n      Category: ['Arts-and-Music', [Validators.required]],\r\n    })\r\n    \r\n  }\r\n\r\n  isMobileDashboard() {\r\n    if (innerWidth > 960 || (innerWidth > 600 && innerWidth < 639)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onSubmit(){\r\n    //Create a Notification to mongocollection notification\r\n    //current logged in user\r\n    var loggedUserId = JSON.parse(localStorage.getItem(\"user\")).id.toString();\r\n\r\n    //get the user data first before comitting to collection\r\n    this._userService.getUserDatabyId(loggedUserId).subscribe(userdata => {\r\n      if (userdata.success) {\r\n        var username = userdata.user.username\r\n\r\n        var message = {\r\n          message: username + ' suggests to add ' + this._suggestForm.value.Title + ' by ' + this._suggestForm.value.Author + 'to the library'\r\n        }\r\n\r\n        //Send the message to mongocollection\r\n        this._notificationService.sendNotification(message).subscribe(ndata => {\r\n          if (ndata.success) {\r\n            this.ngFlashMessageService.showFlashMessage({          \r\n              messages: [\"Admin has been notified to add the book\"],           \r\n              dismissible: true,           \r\n              timeout: 3000,          \r\n              type: 'info'\r\n            });\r\n          }else {\r\n            this.ngFlashMessageService.showFlashMessage({          \r\n              messages: [\"Failed to Notify the Admin\"],           \r\n              dismissible: true,           \r\n              timeout: 3000,          \r\n              type: 'danger'\r\n            }); \r\n          }\r\n        })\r\n\r\n        console.log(message);\r\n        \r\n      } else {\r\n        this.ngFlashMessageService.showFlashMessage({          \r\n          messages: [\"Failed to Notify the Admin\"],           \r\n          dismissible: true,           \r\n          timeout: 3000,          \r\n          type: 'danger'\r\n        }); \r\n      }\r\n    })\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService,\r\n              private flashMessage: FlashMessagesService,\r\n              private router: Router){}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.authService.isLoggedIn()) {\r\n      return true;\r\n    }else{\r\n      this.flashMessage.show('You must login first', {cssClass: 'alert-danger', timeout: 2000});\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  adminAuthToken: any;\r\n  authToken: any;\r\n  user: any;\r\n  admin: any;\r\n\r\n\r\n  constructor(private http: Http,\r\n              private jwtHelper: JwtHelperService,\r\n              ) { }\r\n\r\n  \r\n\r\n  registerUser(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('http://localhost:3000/user/register', user, { headers: headers })\r\n      .pipe(map((res) => res.json()));\r\n\r\n  }\r\n\r\n  authenticateUser(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('http://localhost:3000/user/authenticate', user, { headers: headers })\r\n      .pipe(map((res) => res.json()));\r\n  }\r\n\r\n  getProfile() {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('http://localhost:3000/user/profile', { headers: headers })\r\n      .pipe(map((res) => res.json()));\r\n  }\r\n\r\n  getAdminProfile() {\r\n    let adminheaders = new Headers();\r\n    this.loadAdminToken();\r\n    adminheaders.append('Authorization', this.adminAuthToken);\r\n    adminheaders.append('Content-Type', 'application/json');\r\n    return this.http.get('http://localhost:3000/user/profile', { headers: adminheaders })\r\n      .pipe(map((res) => res.json()));\r\n  }\r\n\r\n  storeUserData(token, user) {\r\n    localStorage.setItem('id_token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  storeAdminData(admintoken, admin){\r\n    localStorage.setItem('admin_id_token', admintoken);\r\n    localStorage.setItem('admin', JSON.stringify(admin));\r\n    this.adminAuthToken = admintoken;\r\n    this.admin = admin;\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n  loadAdminToken(){\r\n    const token = localStorage.getItem('admin_id_token');\r\n    this.adminAuthToken = token;\r\n  }\r\n\r\n  logout() {\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n  }\r\n\r\n  adminLogout() {\r\n    this.adminAuthToken = null;\r\n    this.admin = null;\r\n    localStorage.clear();\r\n  }\r\n\r\n  isLoggedIn() {\r\n    const token: string = localStorage.getItem('id_token');\r\n    return token != null && !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n\r\n  isAdminLoggedIn(){            \r\n    const adminToken: string = localStorage.getItem('admin_id_token');    \r\n    return adminToken != null && !this.jwtHelper.isTokenExpired(adminToken);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from \"rxjs/operators\";\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BooksService {\r\n  \r\n  constructor(private  httpClient:  HttpClient,\r\n              private http: Http) { }\r\n\r\n  API_URL = \"http://localhost:3000/api/books\";\r\n\r\n  getBooks(){\r\n    return this.httpClient.get(this.API_URL);\r\n  }\r\n\r\n  \r\n  getBookById(bookId){\r\n    return this.http.get('http://localhost:3000/api/books/' + bookId)\r\n      .pipe(map((res)=>res.json()));\r\n  }\r\n\r\n  registerBook(book){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.API_URL, book, { headers: headers })\r\n      .pipe(map((res) => res.json()));\r\n  }\r\n\r\n  editBook(bookId, book){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.put('http://localhost:3000/api/books/' + bookId, book, { headers: headers })\r\n      .pipe(map((res)=>res.json()));\r\n  }\r\n\r\n  deleteBook(bookId){\r\n    return this.http.delete('http://localhost:3000/api/books/' + bookId)\r\n    .pipe(map((res) => res.json()));\r\n  }\r\n\r\n  borrowBook(bookId, update){\r\n    //patch to make availability false in conf-borrow\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.patch('http://localhost:3000/api/books/' + bookId, update, { headers: headers })\r\n      .pipe(map((res)=>res.json()));\r\n  }\r\n\r\n  buybook(){\r\n    // return this.httpClient.get('http://localhost:3000/paytm');\r\n    // this.httpClient.get()\r\n  }\r\n\r\n  makeAvailable(bookId, update){\r\n    //Make availability true and pop the borrower in books\r\n    console.log('bookid is :', bookId);\r\n    \r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.patch('http://localhost:3000/api/book/' + bookId, update, { headers: headers })\r\n      .pipe(map((res)=>res.json()));\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationsService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  sendNotification(message){\r\n    let headers = new Headers();      \r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('http://localhost:3000/notification', message, { headers: headers })\r\n      .pipe(map((res) => res.json()));\r\n  }\r\n\r\n  getAllNotifications(){\r\n    return this.http.get('http://localhost:3000/notification')\r\n      .pipe(map((res) => res.json()));\r\n  }\r\n\r\n  deleteNotificationById(notiId){\r\n    return this.http.delete('http://localhost:3000/notification/' + notiId)\r\n      .pipe(map((res) => res.json()));\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { abort } from 'process';\r\n// import * as AWS from 'aws-sdk/global';\r\n// import * as S3 from 'aws-sdk/clients/s3';\r\nconst { BlobServiceClient } = require(\"@azure/storage-blob\");\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UploadService {\r\n\r\n  constructor() { }\r\n\r\n\r\nimage : String = null;\r\n  async uploadFile(file) {\r\n\r\n    const accountName = \"azureappdata\";\r\n    const sasString = \"?sv=2020-08-04&ss=bfqt&srt=sco&sp=rwdlacupitfx&se=2022-10-01T02:07:54Z&st=2022-04-10T18:07:54Z&spr=https&sig=STN%2FN9UkdtQuldDFyAzhlg1m5w12GrIB5DkeTuhq7Gw%3D\";\r\n    const containerName = \"file\" ;\r\n    \r\n    const blobServiceClient = new BlobServiceClient(`https://${accountName}.blob.core.windows.net${sasString}`);\r\n    console.log(file)\r\n    const account = \"azureappdata\"\r\n        \r\n    const containerClient = blobServiceClient.getContainerClient(containerName);\r\n    console.log(containerClient)\r\n    const blockBlobClient = containerClient.getBlockBlobClient(\"bookdeck/\"+file.name);\r\n    blockBlobClient.uploadData(file);\r\n\r\n\r\n\r\n\r\n    \r\n    // const contentType = file.type;\r\n    // const bucket = new S3(\r\n    //       {\r\n    //           accessKeyId: 'AWS_ACCESS_KEY',\r\n    //           secretAccessKey: 'AWS_SECRET_KEY',\r\n    //           region: 'us-east-1'\r\n    //       }\r\n    //   );\r\n    //   const params = {\r\n    //       Bucket: 'esdbookshelf',\r\n    //       Key: file.name,\r\n    //       Body: file,\r\n    //       ACL: 'public-read',\r\n    //       ContentType: contentType\r\n    //   };\r\n     \r\n    //   bucket.upload(params, (err, data) => {\r\n    //       if (err) {\r\n    //           console.log('There was an error uploading your file: ', err);\r\n    //           return false;\r\n    //       }\r\n    //       console.log('Successfully uploaded file.', data.Location);\r\n    //       // this.image =  bucket.getSignedUrl('getObject', {Key: params.Key});\r\n    //       console.log('returning addres', data.Location);\r\n    //       return data.Location;\r\n    //   });\r\n\r\n    \r\n//for upload progress   \r\n/*bucket.upload(params).on('httpUploadProgress', function (evt) {\r\n          console.log(evt.loaded + ' of ' + evt.total + ' Bytes');\r\n      }).send(function (err, data) {\r\n          if (err) {\r\n              console.log('There was an error uploading your file: ', err);\r\n              return false;\r\n          }\r\n          console.log('Successfully uploaded file.', data);\r\n          return true;\r\n      });*/\r\n}\r\n\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  addToBookmark(bookId, userId){\r\n    let headers = new Headers();      \r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('http://localhost:3000/user/bookmark/' + userId, bookId, { headers: headers })\r\n      .pipe(map((res)=>res.json()));\r\n  }\r\n\r\n  getUserDatabyId(userId){        \r\n    return this.http.get('http://localhost:3000/user/'+userId)\r\n      .pipe(map((res) => res.json()));\r\n  }\r\n\r\n  addToBorrows(bookId, userId){\r\n    let headers = new Headers();      \r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('http://localhost:3000/user/borrow/'+ userId, bookId, { headers: headers })\r\n      .pipe(map((res)=>res.json()));\r\n  }\r\n\r\n  removeBorrows(bookId, userId){\r\n    let headers = new Headers();      \r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('http://localhost:3000/user/drop/' + userId, bookId, { headers: headers })\r\n      .pipe(map((res)=>res.json()));\r\n  }\r\n\r\n  getBookData(userId){\r\n    return this.http.get('http://localhost:3000/user/'+userId)\r\n      .pipe(map((res)=>res.json()));\r\n  }\r\n\r\n  getAllUsers(){\r\n    //get all users data\r\n    return this.http.get('http://localhost:3000/user/')\r\n      .pipe(map((res)=>res.json()));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidateService {\r\n\r\n  constructor() { }\r\n\r\n  validateRegister(user){\r\n    if (user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined ) {\r\n      return false;      \r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validateEmail(email){\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    console.log(re.test(String(email).toLowerCase()));\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: \"AIzaSyD31yJRJIg3TEvivPWA747-R6p6QXKXkfQ\",\r\n    authDomain: \"ng-firebase-b5fcd.firebaseapp.com\",\r\n    databaseURL: \"https://ng-firebase-b5fcd.firebaseio.com\",\r\n    projectId: \"ng-firebase-b5fcd\",\r\n    storageBucket: \"ng-firebase-b5fcd.appspot.com\",\r\n    messagingSenderId: \"107054392213\"\r\n  }\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */"],"sourceRoot":""}